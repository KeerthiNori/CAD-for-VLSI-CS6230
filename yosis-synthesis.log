
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openlane/designs/mk_mul/src/mk_mul.v
Parsing SystemVerilog input from `/openlane/designs/mk_mul/src/mk_mul.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\mk_mul'.
Successfully finished Verilog frontend.

2. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/mk_mul/runs/RUN_2023.12.11_07.25.18/tmp/synthesis/hierarchy.dot'.
Dumping module mk_mul to page 1.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \mk_mul

3.2. Analyzing design hierarchy..
Top module:  \mk_mul
Removed 0 unused modules.
Renaming module mk_mul to mk_mul.

4. Executing TRIBUF pass.

5. Executing HIERARCHY pass (managing design hierarchy).

5.1. Analyzing design hierarchy..
Top module:  \mk_mul

5.2. Analyzing design hierarchy..
Top module:  \mk_mul
Removed 0 unused modules.

6. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141 in module mk_mul.
Removed a total of 0 dead cases.

8. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

9. Executing PROC_INIT pass (extract init attributes).

10. Executing PROC_ARST pass (detect async resets in processes).

11. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~24 debug messages>

12. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
     1/23: $0\stg4[0:0]
     2/23: $0\stg3[0:0]
     3/23: $0\stg2[0:0]
     4/23: $0\stg1[0:0]
     5/23: $0\sign_3[0:0]
     6/23: $0\sign_2[0:0]
     7/23: $0\sign_1[0:0]
     8/23: $0\sign[0:0]
     9/23: $0\result[129:0]
    10/23: $0\pp7_1[143:0]
    11/23: $0\pp6_1[143:0]
    12/23: $0\pp5_1[143:0]
    13/23: $0\pp4_1[143:0]
    14/23: $0\pp3_1[143:0]
    15/23: $0\pp3[129:0]
    16/23: $0\pp2_1[143:0]
    17/23: $0\pp2[129:0]
    18/23: $0\pp1_1[143:0]
    19/23: $0\pp1[129:0]
    20/23: $0\pp0_1[143:0]
    21/23: $0\pp0[129:0]
    22/23: $0\operand2[63:0]
    23/23: $0\operand1[63:0]

13. Executing PROC_DLATCH pass (convert process syncs to latches).

14. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mk_mul.\operand1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$258' with positive edge clock.
Creating register for signal `\mk_mul.\operand2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$259' with positive edge clock.
Creating register for signal `\mk_mul.\pp0' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$260' with positive edge clock.
Creating register for signal `\mk_mul.\pp0_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$261' with positive edge clock.
Creating register for signal `\mk_mul.\pp1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$262' with positive edge clock.
Creating register for signal `\mk_mul.\pp1_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$263' with positive edge clock.
Creating register for signal `\mk_mul.\pp2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$264' with positive edge clock.
Creating register for signal `\mk_mul.\pp2_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$265' with positive edge clock.
Creating register for signal `\mk_mul.\pp3' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$266' with positive edge clock.
Creating register for signal `\mk_mul.\pp3_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$267' with positive edge clock.
Creating register for signal `\mk_mul.\pp4_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$268' with positive edge clock.
Creating register for signal `\mk_mul.\pp5_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$269' with positive edge clock.
Creating register for signal `\mk_mul.\pp6_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$270' with positive edge clock.
Creating register for signal `\mk_mul.\pp7_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$271' with positive edge clock.
Creating register for signal `\mk_mul.\result' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$272' with positive edge clock.
Creating register for signal `\mk_mul.\sign' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$273' with positive edge clock.
Creating register for signal `\mk_mul.\sign_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$274' with positive edge clock.
Creating register for signal `\mk_mul.\sign_2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$275' with positive edge clock.
Creating register for signal `\mk_mul.\sign_3' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$276' with positive edge clock.
Creating register for signal `\mk_mul.\stg1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$277' with positive edge clock.
Creating register for signal `\mk_mul.\stg2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$278' with positive edge clock.
Creating register for signal `\mk_mul.\stg3' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$279' with positive edge clock.
Creating register for signal `\mk_mul.\stg4' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
  created $dff cell `$procdff$280' with positive edge clock.

15. Executing PROC_MEMWR pass (convert process memory writes to cells).

16. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 24 empty switches in `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
Removing empty process `mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:570$141'.
Cleaned up 24 empty switches.

17. Executing CHECK pass (checking for obvious problems).
Checking module mk_mul...
Found and reported 0 problems.

18. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~24 debug messages>

19. Executing FLATTEN pass (flatten design).

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 1 unused cells and 207 unused wires.
<suppressed ~2 debug messages>

22. Executing OPT pass (performing simple optimizations).

22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:337$6: \get_inp_inp2 -> { 1'0 \get_inp_inp2 [62:0] }
      Replacing known input bits on port A of cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:333$5: \get_inp_inp1 -> { 1'0 \get_inp_inp1 [62:0] }
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~88 debug messages>

22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

22.6. Executing OPT_DFF pass (perform DFF optimizations).

22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

22.9. Finished OPT passes. (There is nothing left to do.)

23. Executing FSM pass (extract and optimize FSM).

23.1. Executing FSM_DETECT pass (finding FSMs in design).

23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~88 debug messages>

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$280 ($dff) from module mk_mul (D = $procmux$143_Y, Q = \stg4, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$281 ($sdff) from module mk_mul (D = 1'1, Q = \stg4).
Adding SRST signal on $procdff$279 ($dff) from module mk_mul (D = $procmux$148_Y, Q = \stg3, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$283 ($sdff) from module mk_mul (D = 1'1, Q = \stg3).
Adding SRST signal on $procdff$278 ($dff) from module mk_mul (D = $procmux$153_Y, Q = \stg2, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$285 ($sdff) from module mk_mul (D = 1'1, Q = \stg2).
Adding SRST signal on $procdff$277 ($dff) from module mk_mul (D = $procmux$158_Y, Q = \stg1, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$287 ($sdff) from module mk_mul (D = 1'1, Q = \stg1).
Adding SRST signal on $procdff$276 ($dff) from module mk_mul (D = $procmux$163_Y, Q = \sign_3, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$289 ($sdff) from module mk_mul (D = \sign_2, Q = \sign_3).
Adding SRST signal on $procdff$275 ($dff) from module mk_mul (D = $procmux$168_Y, Q = \sign_2, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$291 ($sdff) from module mk_mul (D = \sign_1, Q = \sign_2).
Adding SRST signal on $procdff$274 ($dff) from module mk_mul (D = $procmux$173_Y, Q = \sign_1, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$293 ($sdff) from module mk_mul (D = \sign, Q = \sign_1).
Adding SRST signal on $procdff$273 ($dff) from module mk_mul (D = $procmux$178_Y, Q = \sign, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$295 ($sdff) from module mk_mul (D = \sign$D_IN, Q = \sign).
Adding SRST signal on $procdff$272 ($dff) from module mk_mul (D = $procmux$183_Y, Q = \result, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$297 ($sdff) from module mk_mul (D = \result$D_IN, Q = \result).
Adding SRST signal on $procdff$271 ($dff) from module mk_mul (D = $procmux$188_Y, Q = \pp7_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$299 ($sdff) from module mk_mul (D = { \o1__h2993 \o2__h2994 }, Q = \pp7_1).
Adding SRST signal on $procdff$270 ($dff) from module mk_mul (D = $procmux$193_Y, Q = \pp6_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$301 ($sdff) from module mk_mul (D = { \o1__h2688 \o2__h2689 }, Q = \pp6_1).
Adding SRST signal on $procdff$269 ($dff) from module mk_mul (D = $procmux$198_Y, Q = \pp5_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$303 ($sdff) from module mk_mul (D = { \o1__h2383 \o2__h2384 }, Q = \pp5_1).
Adding SRST signal on $procdff$268 ($dff) from module mk_mul (D = $procmux$203_Y, Q = \pp4_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$305 ($sdff) from module mk_mul (D = { \o1__h2078 \o2__h2079 }, Q = \pp4_1).
Adding SRST signal on $procdff$267 ($dff) from module mk_mul (D = $procmux$208_Y, Q = \pp3_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$307 ($sdff) from module mk_mul (D = { \o1__h1773 \o2__h1774 }, Q = \pp3_1).
Adding SRST signal on $procdff$266 ($dff) from module mk_mul (D = $procmux$213_Y, Q = \pp3, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$309 ($sdff) from module mk_mul (D = \pp3$D_IN, Q = \pp3).
Adding SRST signal on $procdff$265 ($dff) from module mk_mul (D = $procmux$218_Y, Q = \pp2_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$311 ($sdff) from module mk_mul (D = { \o1__h1468 \o2__h1469 }, Q = \pp2_1).
Adding SRST signal on $procdff$264 ($dff) from module mk_mul (D = $procmux$223_Y, Q = \pp2, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$313 ($sdff) from module mk_mul (D = \pp2$D_IN, Q = \pp2).
Adding SRST signal on $procdff$263 ($dff) from module mk_mul (D = $procmux$228_Y, Q = \pp1_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$315 ($sdff) from module mk_mul (D = { \o1__h1163 \o2__h1164 }, Q = \pp1_1).
Adding SRST signal on $procdff$262 ($dff) from module mk_mul (D = $procmux$233_Y, Q = \pp1, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$317 ($sdff) from module mk_mul (D = \pp1$D_IN, Q = \pp1).
Adding SRST signal on $procdff$261 ($dff) from module mk_mul (D = $procmux$238_Y, Q = \pp0_1, rval = 144'000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$319 ($sdff) from module mk_mul (D = { \o1__h843 \o2__h844 }, Q = \pp0_1).
Adding SRST signal on $procdff$260 ($dff) from module mk_mul (D = $procmux$243_Y, Q = \pp0, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$321 ($sdff) from module mk_mul (D = \pp0$D_IN, Q = \pp0).
Adding SRST signal on $procdff$259 ($dff) from module mk_mul (D = $procmux$248_Y, Q = \operand2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$323 ($sdff) from module mk_mul (D = \operand2$D_IN, Q = \operand2).
Adding SRST signal on $procdff$258 ($dff) from module mk_mul (D = $procmux$253_Y, Q = \operand1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$325 ($sdff) from module mk_mul (D = \operand1$D_IN, Q = \operand1).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 46 unused cells and 46 unused wires.
<suppressed ~47 debug messages>

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

24.9. Rerunning OPT passes. (Maybe there is more to do..)

24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

24.13. Executing OPT_DFF pass (perform DFF optimizations).

24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

24.16. Finished OPT passes. (There is nothing left to do.)

25. Executing WREDUCE pass (reducing word size of cells).
Removed top 50 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:341$7 ($add).
Removed top 34 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:349$8 ($add).
Removed top 18 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:357$9 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:365$10 ($add).
Removed top 63 bits (of 64) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:442$30 ($add).
Removed top 63 bits (of 64) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:443$32 ($add).
Removed top 127 bits (of 128) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:444$34 ($add).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:445$35 ($mux).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:446$36 ($mux).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:447$37 ($mux).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:448$38 ($mux).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:449$39 ($mux).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:450$40 ($mux).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:451$41 ($mux).
Removed top 8 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:452$42 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:453$43 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:454$44 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:455$45 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:456$46 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:457$47 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:458$48 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:459$49 ($mux).
Removed top 7 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:460$50 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:461$51 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:462$52 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:463$53 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:464$54 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:465$55 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:466$56 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:467$57 ($mux).
Removed top 6 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:468$58 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:469$59 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:470$60 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:471$61 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:472$62 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:473$63 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:474$64 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:475$65 ($mux).
Removed top 5 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:476$66 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:477$67 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:478$68 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:479$69 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:480$70 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:481$71 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:482$72 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:483$73 ($mux).
Removed top 4 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:484$74 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:485$75 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:486$76 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:487$77 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:488$78 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:489$79 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:490$80 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:491$81 ($mux).
Removed top 3 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:492$82 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:493$83 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:494$84 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:495$85 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:496$86 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:497$87 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:498$88 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:499$89 ($mux).
Removed top 2 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:500$90 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:501$91 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:502$92 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:503$93 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:504$94 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:505$95 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:506$96 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:507$97 ($mux).
Removed top 1 bits (of 72) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:508$98 ($mux).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:509$99 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:510$100 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:510$100 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:510$100 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:511$101 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:512$102 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:512$102 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:512$102 ($add).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:513$103 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:514$104 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:514$104 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:514$104 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:515$105 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:516$106 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:516$106 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:516$106 ($add).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:517$107 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:518$108 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:518$108 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:518$108 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:519$109 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:520$110 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:520$110 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:520$110 ($add).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:521$111 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:522$112 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:522$112 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:522$112 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:523$113 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:524$114 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:524$114 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:524$114 ($add).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:525$115 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:526$116 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:526$116 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:526$116 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:527$117 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:528$118 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:528$118 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:528$118 ($add).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:529$119 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:530$120 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:530$120 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:530$120 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:531$121 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:532$122 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:532$122 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:532$122 ($add).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:533$123 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:534$124 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:534$124 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:534$124 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:535$125 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:536$126 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:536$126 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:536$126 ($add).
Removed top 2 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:537$127 ($add).
Removed top 4 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:538$128 ($add).
Removed top 3 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:538$128 ($add).
Removed top 2 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:538$128 ($add).
Removed top 50 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:539$129 ($add).
Removed top 58 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:540$130 ($add).
Removed top 58 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:540$130 ($add).
Removed top 57 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:540$130 ($add).
Removed top 34 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:542$131 ($add).
Removed top 42 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:543$132 ($add).
Removed top 42 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:543$132 ($add).
Removed top 41 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:543$132 ($add).
Removed top 18 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:545$133 ($add).
Removed top 26 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:546$134 ($add).
Removed top 26 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:546$134 ($add).
Removed top 25 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:546$134 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:548$135 ($add).
Removed top 10 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:549$136 ($add).
Removed top 10 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:549$136 ($add).
Removed top 9 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:549$136 ($add).
Removed top 6 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:553$139 ($add).
Removed top 8 bits (of 72) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:554$140 ($add).
Removed top 7 bits (of 72) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:554$140 ($add).
Removed top 6 bits (of 72) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:554$140 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$298 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:389$11 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:389$11 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:389$11 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:551$137 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:551$137 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:551$137 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$310 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:365$10 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:365$10 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:552$138 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:552$138 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:552$138 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$314 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:357$9 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:357$9 ($add).
Removed top 9 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:548$135 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:548$135 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$322 ($sdffe).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$318 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:341$7 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:341$7 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:349$8 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:349$8 ($add).
Removed top 25 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:545$133 ($add).
Removed top 17 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:545$133 ($add).
Removed top 57 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:539$129 ($add).
Removed top 49 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:539$129 ($add).
Removed top 41 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:542$131 ($add).
Removed top 33 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:542$131 ($add).
Removed top 2 bits (of 130) from wire mk_mul.pp0.
Removed top 2 bits (of 130) from wire mk_mul.pp0$D_IN.
Removed top 2 bits (of 130) from wire mk_mul.pp2$D_IN.
Removed top 8 bits (of 72) from wire mk_mul.s1__h1155.
Removed top 8 bits (of 72) from wire mk_mul.s1__h1460.
Removed top 7 bits (of 72) from wire mk_mul.s2__h1766.
Removed top 7 bits (of 72) from wire mk_mul.s2__h2071.
Removed top 7 bits (of 72) from wire mk_mul.s2__h2376.
Removed top 7 bits (of 72) from wire mk_mul.s2__h2681.
Removed top 6 bits (of 72) from wire mk_mul.s3__h1462.
Removed top 5 bits (of 72) from wire mk_mul.s4__h1158.
Removed top 49 bits (of 130) from wire mk_mul.x__h3336.
Removed top 2 bits (of 130) from wire mk_mul.x__h3910.

26. Executing PEEPOPT pass (run peephole optimizers).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

28. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mk_mul:
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:341$7 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:349$8 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:357$9 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:365$10 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:389$11 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:426$13 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:427$14 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:428$15 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:429$16 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:430$17 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:431$18 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:432$19 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:433$20 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:434$21 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:435$22 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:436$23 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:437$24 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:438$25 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:439$26 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:440$27 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:441$28 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:442$30 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:443$32 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:444$34 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:509$99 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:510$100 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:511$101 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:512$102 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:513$103 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:514$104 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:515$105 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:516$106 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:517$107 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:518$108 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:519$109 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:520$110 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:521$111 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:522$112 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:523$113 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:524$114 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:525$115 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:526$116 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:527$117 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:528$118 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:529$119 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:530$120 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:531$121 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:532$122 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:533$123 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:534$124 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:535$125 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:536$126 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:537$127 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:538$128 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:539$129 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:540$130 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:542$131 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:543$132 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:545$133 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:546$134 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:548$135 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:549$136 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:551$137 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:552$138 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:553$139 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:554$140 ($add).
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:552$138 into $add$/openlane/designs/mk_mul/src/mk_mul.v:551$137.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:549$136 into $add$/openlane/designs/mk_mul/src/mk_mul.v:548$135.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:546$134 into $add$/openlane/designs/mk_mul/src/mk_mul.v:545$133.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:543$132 into $add$/openlane/designs/mk_mul/src/mk_mul.v:542$131.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:540$130 into $add$/openlane/designs/mk_mul/src/mk_mul.v:539$129.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:509$99 into $add$/openlane/designs/mk_mul/src/mk_mul.v:441$28.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:537$127 into $add$/openlane/designs/mk_mul/src/mk_mul.v:440$27.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:533$123 into $add$/openlane/designs/mk_mul/src/mk_mul.v:439$26.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:529$119 into $add$/openlane/designs/mk_mul/src/mk_mul.v:438$25.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:525$115 into $add$/openlane/designs/mk_mul/src/mk_mul.v:437$24.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:521$111 into $add$/openlane/designs/mk_mul/src/mk_mul.v:436$23.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:517$107 into $add$/openlane/designs/mk_mul/src/mk_mul.v:435$22.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:513$103 into $add$/openlane/designs/mk_mul/src/mk_mul.v:434$21.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:553$139 into $add$/openlane/designs/mk_mul/src/mk_mul.v:433$20.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:535$125 into $add$/openlane/designs/mk_mul/src/mk_mul.v:432$19.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:531$121 into $add$/openlane/designs/mk_mul/src/mk_mul.v:431$18.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:527$117 into $add$/openlane/designs/mk_mul/src/mk_mul.v:430$17.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:523$113 into $add$/openlane/designs/mk_mul/src/mk_mul.v:429$16.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:519$109 into $add$/openlane/designs/mk_mul/src/mk_mul.v:428$15.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:515$105 into $add$/openlane/designs/mk_mul/src/mk_mul.v:427$14.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:511$101 into $add$/openlane/designs/mk_mul/src/mk_mul.v:426$13.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:551$137 into $add$/openlane/designs/mk_mul/src/mk_mul.v:389$11.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:548$135 into $add$/openlane/designs/mk_mul/src/mk_mul.v:365$10.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:530$120.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:526$116.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:534$124.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:524$114.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:554$140.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:522$112.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:538$128.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:520$110.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:536$126.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:518$108.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:516$106.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:514$104.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:532$122.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:512$102.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:528$118.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:510$100.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:444$34.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:443$32.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:442$30.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:357$9.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:349$8.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:341$7.
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:441$28: $auto$alumacc.cc:365:replace_macc$340
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:440$27: $auto$alumacc.cc:365:replace_macc$341
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:439$26: $auto$alumacc.cc:365:replace_macc$342
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:438$25: $auto$alumacc.cc:365:replace_macc$343
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:437$24: $auto$alumacc.cc:365:replace_macc$344
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:436$23: $auto$alumacc.cc:365:replace_macc$345
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:435$22: $auto$alumacc.cc:365:replace_macc$346
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:434$21: $auto$alumacc.cc:365:replace_macc$347
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:433$20: $auto$alumacc.cc:365:replace_macc$348
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:432$19: $auto$alumacc.cc:365:replace_macc$349
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:431$18: $auto$alumacc.cc:365:replace_macc$350
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:430$17: $auto$alumacc.cc:365:replace_macc$351
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:429$16: $auto$alumacc.cc:365:replace_macc$352
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:428$15: $auto$alumacc.cc:365:replace_macc$353
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:427$14: $auto$alumacc.cc:365:replace_macc$354
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:426$13: $auto$alumacc.cc:365:replace_macc$355
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:389$11: $auto$alumacc.cc:365:replace_macc$356
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:365$10: $auto$alumacc.cc:365:replace_macc$357
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:542$131: $auto$alumacc.cc:365:replace_macc$358
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:539$129: $auto$alumacc.cc:365:replace_macc$359
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:545$133: $auto$alumacc.cc:365:replace_macc$360
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:341$7: $auto$alumacc.cc:485:replace_alu$361
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:349$8: $auto$alumacc.cc:485:replace_alu$364
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:357$9: $auto$alumacc.cc:485:replace_alu$367
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:442$30: $auto$alumacc.cc:485:replace_alu$370
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:443$32: $auto$alumacc.cc:485:replace_alu$373
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:444$34: $auto$alumacc.cc:485:replace_alu$376
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:510$100: $auto$alumacc.cc:485:replace_alu$379
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:528$118: $auto$alumacc.cc:485:replace_alu$382
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:512$102: $auto$alumacc.cc:485:replace_alu$385
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:532$122: $auto$alumacc.cc:485:replace_alu$388
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:514$104: $auto$alumacc.cc:485:replace_alu$391
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:516$106: $auto$alumacc.cc:485:replace_alu$394
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:518$108: $auto$alumacc.cc:485:replace_alu$397
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:536$126: $auto$alumacc.cc:485:replace_alu$400
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:520$110: $auto$alumacc.cc:485:replace_alu$403
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:538$128: $auto$alumacc.cc:485:replace_alu$406
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:522$112: $auto$alumacc.cc:485:replace_alu$409
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:554$140: $auto$alumacc.cc:485:replace_alu$412
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:524$114: $auto$alumacc.cc:485:replace_alu$415
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:534$124: $auto$alumacc.cc:485:replace_alu$418
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:526$116: $auto$alumacc.cc:485:replace_alu$421
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:530$120: $auto$alumacc.cc:485:replace_alu$424
  created 22 $alu and 21 $macc cells.

29. Executing SHARE pass (SAT-based resource sharing).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 23 unused cells and 19 unused wires.
<suppressed ~42 debug messages>

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

30.9. Rerunning OPT passes. (Maybe there is more to do..)

30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

30.13. Executing OPT_DFF pass (perform DFF optimizations).

30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

30.16. Finished OPT passes. (There is nothing left to do.)

31. Executing MEMORY pass.

31.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

31.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

31.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

31.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

31.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

31.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

31.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

31.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

31.10. Executing MEMORY_COLLECT pass (generating $mem cells).

32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~473 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

33.3. Executing OPT_DFF pass (perform DFF optimizations).

33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 0 unused cells and 90 unused wires.
<suppressed ~1 debug messages>

33.5. Finished fast OPT passes.

34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:453$43:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h1156 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h1156 [64:1]
      New connections: \s2__h1156 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:454$44:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h1461 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h1461 [64:1]
      New connections: \s2__h1461 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:455$45:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h1766
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h1766 [64:1]
      New connections: \s2__h1766 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:456$46:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2071
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2071 [64:1]
      New connections: \s2__h2071 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:457$47:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2376
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2376 [64:1]
      New connections: \s2__h2376 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:458$48:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2681
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2681 [64:1]
      New connections: \s2__h2681 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:459$49:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2986 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2986 [64:1]
      New connections: \s2__h2986 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:460$50:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h836 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h836 [64:1]
      New connections: \s2__h836 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:461$51:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h1157 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h1157 [65:2]
      New connections: \s3__h1157 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:462$52:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h1462
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h1462 [65:2]
      New connections: \s3__h1462 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:463$53:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h1767 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h1767 [65:2]
      New connections: \s3__h1767 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:464$54:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2072 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2072 [65:2]
      New connections: \s3__h2072 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:465$55:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2377 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2377 [65:2]
      New connections: \s3__h2377 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:466$56:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2682 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2682 [65:2]
      New connections: \s3__h2682 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:467$57:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2987 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2987 [65:2]
      New connections: \s3__h2987 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:468$58:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h837 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h837 [65:2]
      New connections: \s3__h837 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:469$59:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h1158
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h1158 [66:3]
      New connections: \s4__h1158 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:470$60:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h1463 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h1463 [66:3]
      New connections: \s4__h1463 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:471$61:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h1768 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h1768 [66:3]
      New connections: \s4__h1768 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:472$62:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2073 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2073 [66:3]
      New connections: \s4__h2073 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:473$63:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2378 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2378 [66:3]
      New connections: \s4__h2378 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:474$64:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2683 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2683 [66:3]
      New connections: \s4__h2683 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:475$65:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2988 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2988 [66:3]
      New connections: \s4__h2988 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:476$66:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h838 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h838 [66:3]
      New connections: \s4__h838 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:477$67:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h1159 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h1159 [67:4]
      New connections: \s5__h1159 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:478$68:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h1464 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h1464 [67:4]
      New connections: \s5__h1464 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:479$69:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h1769 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h1769 [67:4]
      New connections: \s5__h1769 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:480$70:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2074 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2074 [67:4]
      New connections: \s5__h2074 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:481$71:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2379 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2379 [67:4]
      New connections: \s5__h2379 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:482$72:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2684 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2684 [67:4]
      New connections: \s5__h2684 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:483$73:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2989 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2989 [67:4]
      New connections: \s5__h2989 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:484$74:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h839 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h839 [67:4]
      New connections: \s5__h839 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:485$75:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h1160 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h1160 [68:5]
      New connections: \s6__h1160 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:486$76:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h1465 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h1465 [68:5]
      New connections: \s6__h1465 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:487$77:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h1770 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h1770 [68:5]
      New connections: \s6__h1770 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:488$78:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2075 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2075 [68:5]
      New connections: \s6__h2075 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:489$79:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2380 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2380 [68:5]
      New connections: \s6__h2380 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:490$80:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2685 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2685 [68:5]
      New connections: \s6__h2685 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:491$81:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2990 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2990 [68:5]
      New connections: \s6__h2990 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:492$82:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h840 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h840 [68:5]
      New connections: \s6__h840 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:493$83:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h1161 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h1161 [69:6]
      New connections: \s7__h1161 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:494$84:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h1466 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h1466 [69:6]
      New connections: \s7__h1466 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:495$85:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h1771 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h1771 [69:6]
      New connections: \s7__h1771 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:496$86:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h2076 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h2076 [69:6]
      New connections: \s7__h2076 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:497$87:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h2381 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h2381 [69:6]
      New connections: \s7__h2381 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:498$88:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h2686 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h2686 [69:6]
      New connections: \s7__h2686 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:499$89:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h2991 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h2991 [69:6]
      New connections: \s7__h2991 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:500$90:
      Old ports: A=70'0000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 6'000000 }, Y=\s7__h841 [69:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s7__h841 [69:6]
      New connections: \s7__h841 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:501$91:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h1162 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h1162 [70:7]
      New connections: \s8__h1162 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:502$92:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h1467 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h1467 [70:7]
      New connections: \s8__h1467 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:503$93:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h1772 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h1772 [70:7]
      New connections: \s8__h1772 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:504$94:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h2077 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h2077 [70:7]
      New connections: \s8__h2077 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:505$95:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h2382 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h2382 [70:7]
      New connections: \s8__h2382 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:506$96:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h2687 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h2687 [70:7]
      New connections: \s8__h2687 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:507$97:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h2992 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h2992 [70:7]
      New connections: \s8__h2992 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:508$98:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 7'0000000 }, Y=\s8__h842 [70:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s8__h842 [70:7]
      New connections: \s8__h842 [6:0] = 7'0000000
  Optimizing cells in module \mk_mul.
Performed a total of 56 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.6. Executing OPT_SHARE pass.

35.7. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 114 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 115 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 116 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 117 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 118 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 119 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 120 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 121 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 122 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 123 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 124 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 125 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 126 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 127 on $auto$ff.cc:266:slice$314 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 98 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 99 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 100 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 101 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 102 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 103 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 104 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 105 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 106 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 107 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 108 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 109 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 110 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 111 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 112 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 113 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 114 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 115 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 116 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 117 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 118 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 119 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 120 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 121 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 122 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 123 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 124 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 125 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 126 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 127 on $auto$ff.cc:266:slice$318 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 82 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 83 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 84 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 85 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 86 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 87 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 88 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 89 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 90 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 91 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 92 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 93 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 94 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 95 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 96 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 97 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 98 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 99 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 100 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 101 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 102 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 103 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 104 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 105 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 106 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 107 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 108 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 109 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 110 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 111 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 112 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 113 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 114 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 115 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 116 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 117 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 118 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 119 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 120 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 121 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 122 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 123 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 124 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 125 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 126 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 127 on $auto$ff.cc:266:slice$322 ($sdffe) from module mk_mul.

35.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

35.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~16 debug messages>

35.10. Rerunning OPT passes. (Maybe there is more to do..)

35.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

35.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

35.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.14. Executing OPT_SHARE pass.

35.15. Executing OPT_DFF pass (perform DFF optimizations).

35.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

35.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

35.18. Finished OPT passes. (There is nothing left to do.)

36. Executing TECHMAP pass (map to technology primitives).

36.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

36.2. Continuing TECHMAP pass.
Using template $paramod$5b6befb72d9e8cb4800d8d538ef0b4af2d21773e\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add { \pp2_1 [71:0] 16'0000000000000000 } (88 bits, unsigned)
  add { \pp3_1 [71:0] 24'000000000000000000000000 } (96 bits, unsigned)
  add { \pp2_1 [143:72] 16'0000000000000000 } (88 bits, unsigned)
  add { \pp6_1 [71:0] 48'000000000000000000000000000000000000000000000000 } (120 bits, unsigned)
  add { \pp7_1 [143:72] 56'00000000000000000000000000000000000000000000000000000000 } (128 bits, unsigned)
  add { \pp7_1 [71:0] 56'00000000000000000000000000000000000000000000000000000000 } (128 bits, unsigned)
  add { \pp6_1 [143:72] 48'000000000000000000000000000000000000000000000000 } (120 bits, unsigned)
Using extmapper simplemap for cells of type $xor.
  add { 46'0000000000000000000000000000000000000000000000 \pp0 [81:0] } (128 bits, unsigned)
  add \pp3 [127:0] (128 bits, unsigned)
  add { 14'00000000000000 \pp2 [113:0] } (128 bits, unsigned)
  add { 30'000000000000000000000000000000 \pp1 [97:0] } (128 bits, unsigned)
  add { \x__h1183 [65:1] \s1__h1155 [0] } (66 bits, unsigned)
  add { \s4__h1158 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h1157 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h1488 [65:1] \s1__h1460 [0] } (66 bits, unsigned)
  add { \s4__h1463 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h1462 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h1793 [65:1] \s1__h1765 [0] } (66 bits, unsigned)
  add { \s4__h1768 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h1767 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h2098 [65:1] \s1__h2070 [0] } (66 bits, unsigned)
  add { \s4__h2073 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h2072 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h2403 [65:1] \s1__h2375 [0] } (66 bits, unsigned)
  add { \s4__h2378 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h2377 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h2708 [65:1] \s1__h2680 [0] } (66 bits, unsigned)
  add { \s4__h2683 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h2682 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h3013 [65:1] \s1__h2985 [0] } (66 bits, unsigned)
  add { \s4__h2988 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h2987 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h863 [65:1] \s1__h835 [0] } (66 bits, unsigned)
  add { \s4__h838 [66:3] 3'000 } (67 bits, unsigned)
  add { \s3__h837 [65:2] 2'00 } (66 bits, unsigned)
  add { \x__h1317 [69:5] \s5__h1159 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h1162 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h1161 [69:6] 6'000000 } (70 bits, unsigned)
  add { \x__h1622 [69:5] \s5__h1464 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h1467 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h1466 [69:6] 6'000000 } (70 bits, unsigned)
  add { \x__h1927 [69:5] \s5__h1769 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h1772 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h1771 [69:6] 6'000000 } (70 bits, unsigned)
  add { \x__h2232 [69:5] \s5__h2074 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h2077 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h2076 [69:6] 6'000000 } (70 bits, unsigned)
  add { \x__h2537 [69:5] \s5__h2379 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h2382 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h2381 [69:6] 6'000000 } (70 bits, unsigned)
  add { \x__h2842 [69:5] \s5__h2684 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h2687 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h2686 [69:6] 6'000000 } (70 bits, unsigned)
  add { \x__h3147 [69:5] \s5__h2989 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h2992 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h2991 [69:6] 6'000000 } (70 bits, unsigned)
Using extmapper simplemap for cells of type $not.
Using template $paramod$2fff7390d0c2bf21f9d4a24170e0e0160f5d0249\_90_alu for cells of type $alu.
Using template $paramod$ecbe5d7a893af0bc517570b4bece0868b006ac85\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
  add { \pp4_1 [71:0] 32'00000000000000000000000000000000 } (104 bits, unsigned)
  add { \pp5_1 [71:0] 40'0000000000000000000000000000000000000000 } (112 bits, unsigned)
  add { \pp4_1 [143:72] 32'00000000000000000000000000000000 } (104 bits, unsigned)
  add \pp0_1 [71:0] (72 bits, unsigned)
  add { \pp1_1 [71:0] 8'00000000 } (80 bits, unsigned)
  add \pp0_1 [143:72] (72 bits, unsigned)
  add { \x__h1014 [69:5] \s5__h839 [4] 4'0000 } (70 bits, unsigned)
  add { \s8__h842 [70:7] 7'0000000 } (71 bits, unsigned)
  add { \s7__h841 [69:6] 6'000000 } (70 bits, unsigned)
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001001010 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001010000 for cells of type $fa.
Using template $paramod$ea814c08cac789ab486c2597f8afac9dadeb7b80\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod$7e7bdf4b0adff8e15b2cb24084cd1b911e7a73b3\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000010000000 for cells of type $fa.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000011 for cells of type $fa.
Using template $paramod$4a36c8f54255b1e66b766d9531a976ba57da137e\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000010000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000001 for cells of type $lcu.
Using template $paramod$bd6792e14beb844c1b0e71a72db4c26c74ef9fc3\_90_alu for cells of type $alu.
Using template $paramod$9a715fcb428cc2f229649d72ee1968682870e7c5\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001100001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001110001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001010001 for cells of type $lcu.
No more expansions possible.
<suppressed ~17491 debug messages>

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~8070 debug messages>

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
<suppressed ~474 debug messages>
Removed a total of 158 cells.

37.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$7177 ($_SDFFE_PN0P_) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6378 ($_SDFFE_PN0P_) from module mk_mul.

37.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 2777 unused cells and 3078 unused wires.
<suppressed ~2778 debug messages>

37.5. Rerunning OPT passes. (Removed registers in this run.)

37.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~730 debug messages>

37.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

37.8. Executing OPT_DFF pass (perform DFF optimizations).

37.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 28 unused cells and 148 unused wires.
<suppressed ~29 debug messages>

37.10. Finished fast OPT passes.

38. Executing ABC pass (technology mapping using ABC).

38.1. Extracting gate netlist of module `\mk_mul' to `<abc-temp-dir>/input.blif'..
Extracted 32815 gates and 34585 wires to a netlist network with 1769 inputs and 1766 outputs.

38.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

38.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:      251
ABC RESULTS:               NOT cells:     2104
ABC RESULTS:               AND cells:     4334
ABC RESULTS:              NAND cells:     2231
ABC RESULTS:               NOR cells:     2601
ABC RESULTS:             ORNOT cells:     1089
ABC RESULTS:            ANDNOT cells:     8525
ABC RESULTS:                OR cells:     5063
ABC RESULTS:              XNOR cells:     3056
ABC RESULTS:               XOR cells:     5406
ABC RESULTS:        internal signals:    31050
ABC RESULTS:           input signals:     1769
ABC RESULTS:          output signals:     1766
Removing temp directory.

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~251 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 3 unused cells and 13669 unused wires.
<suppressed ~4 debug messages>

39.5. Finished fast OPT passes.

40. Executing HIERARCHY pass (managing design hierarchy).

40.1. Analyzing design hierarchy..
Top module:  \mk_mul

40.2. Analyzing design hierarchy..
Top module:  \mk_mul
Removed 0 unused modules.

41. Printing statistics.

=== mk_mul ===

   Number of wires:              33093
   Number of wire bits:          47173
   Number of public wires:         202
   Number of public wire bits:   14282
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              36335
     $_ANDNOT_                    8525
     $_AND_                       4334
     $_MUX_                        251
     $_NAND_                      2231
     $_NOR_                       2601
     $_NOT_                       2101
     $_ORNOT_                     1089
     $_OR_                        5063
     $_SDFFE_PN0P_                1678
     $_XNOR_                      3056
     $_XOR_                       5406

42. Executing CHECK pass (checking for obvious problems).
Checking module mk_mul...
Found and reported 0 problems.

43. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/mk_mul/runs/RUN_2023.12.11_07.25.18/tmp/synthesis/post_techmap.dot'.
Dumping module mk_mul to page 1.

44. Executing SHARE pass (SAT-based resource sharing).

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

45.6. Executing OPT_DFF pass (perform DFF optimizations).

45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

45.9. Finished OPT passes. (There is nothing left to do.)

46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 0 unused cells and 146 unused wires.
<suppressed ~146 debug messages>

47. Printing statistics.

=== mk_mul ===

   Number of wires:              32947
   Number of wire bits:          37024
   Number of public wires:          56
   Number of public wire bits:    4133
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              36335
     $_ANDNOT_                    8525
     $_AND_                       4334
     $_MUX_                        251
     $_NAND_                      2231
     $_NOR_                       2601
     $_NOT_                       2101
     $_ORNOT_                     1089
     $_OR_                        5063
     $_SDFFE_PN0P_                1678
     $_XNOR_                      3056
     $_XOR_                       5406

mapping tbuf

48. Executing TECHMAP pass (map to technology primitives).

48.1. Executing Verilog-2005 frontend: /home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

48.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

49. Executing SIMPLEMAP pass (map simple cells to gate primitives).

50. Executing TECHMAP pass (map to technology primitives).

50.1. Executing Verilog-2005 frontend: /home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

50.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

51. Executing SIMPLEMAP pass (map simple cells to gate primitives).

52. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

52.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\mk_mul':
  mapped 1678 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

53. Printing statistics.

=== mk_mul ===

   Number of wires:              36303
   Number of wire bits:          40380
   Number of public wires:          56
   Number of public wire bits:    4133
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              39691
     $_ANDNOT_                    8525
     $_AND_                       4334
     $_MUX_                       3607
     $_NAND_                      2231
     $_NOR_                       2601
     $_NOT_                       2101
     $_ORNOT_                     1089
     $_OR_                        5063
     $_XNOR_                      3056
     $_XOR_                       5406
     sky130_fd_sc_hd__dfxtp_2     1678

[INFO]: USING STRATEGY AREA 0

54. Executing ABC pass (technology mapping using ABC).

54.1. Extracting gate netlist of module `\mk_mul' to `/tmp/yosys-abc-uE929d/input.blif'..
Extracted 38013 gates and 39823 wires to a netlist network with 1808 inputs and 1807 outputs.

54.1.1. Executing ABC.
Running ABC command: "/build/bin/yosys-abc" -s -f /tmp/yosys-abc-uE929d/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-uE929d/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-uE929d/input.blif 
ABC: + read_lib -w /openlane/designs/mk_mul/runs/RUN_2023.12.11_07.25.18/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.08 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/mk_mul/runs/RUN_2023.12.11_07.25.18/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.11 sec
ABC: Memory =    9.54 MB. Time =     0.11 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/mk_mul/runs/RUN_2023.12.11_07.25.18/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/mk_mul/runs/RUN_2023.12.11_07.25.18/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000.0 
ABC: + dnsize -D 10000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  30449 (  8.5 %)   Cap = 10.2 ff (  1.9 %)   Area =   268769.03 ( 91.2 %)   Delay = 10571.12 ps  (  0.4 %)               
ABC: Path  0 --    1599 : 0    6 pi                       A =   0.00  Df =  71.0  -39.2 ps  S = 105.4 ps  Cin =  0.0 ff  Cout =  21.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    5372 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df = 596.3 -359.6 ps  S = 107.6 ps  Cin =  2.4 ff  Cout =  17.3 ff  Cmax = 534.7 ff  G =  679  
ABC: Path  2 --    5411 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =1063.8 -684.3 ps  S = 107.9 ps  Cin =  2.4 ff  Cout =  17.3 ff  Cmax = 534.7 ff  G =  679  
ABC: Path  3 --    5447 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =1531.4-1009.0 ps  S = 107.9 ps  Cin =  2.4 ff  Cout =  17.3 ff  Cmax = 534.7 ff  G =  679  
ABC: Path  4 --    5480 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =1998.9-1333.8 ps  S = 107.9 ps  Cin =  2.4 ff  Cout =  17.3 ff  Cmax = 534.7 ff  G =  679  
ABC: Path  5 --    5512 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =2466.5-1658.5 ps  S = 107.9 ps  Cin =  2.4 ff  Cout =  17.3 ff  Cmax = 534.7 ff  G =  679  
ABC: Path  6 --    5544 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =2934.1-1983.2 ps  S = 107.9 ps  Cin =  2.4 ff  Cout =  17.3 ff  Cmax = 534.7 ff  G =  679  
ABC: Path  7 --    5574 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =3394.0-2305.8 ps  S = 103.2 ps  Cin =  2.4 ff  Cout =  14.8 ff  Cmax = 534.7 ff  G =  582  
ABC: Path  8 --    5599 : 3    5 sky130_fd_sc_hd__or3_4   A =  11.26  Df =3768.3-2539.3 ps  S =  86.6 ps  Cin =  2.4 ff  Cout =  17.3 ff  Cmax = 531.9 ff  G =  690  
ABC: Path  9 --    5635 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =4221.8-2856.2 ps  S = 103.2 ps  Cin =  2.4 ff  Cout =  14.8 ff  Cmax = 534.7 ff  G =  582  
ABC: Path 10 --    5656 : 3    3 sky130_fd_sc_hd__or3_4   A =  11.26  Df =4574.6-3087.0 ps  S =  73.2 ps  Cin =  2.4 ff  Cout =   9.1 ff  Cmax = 531.9 ff  G =  366  
ABC: Path 11 --    5669 : 2    4 sky130_fd_sc_hd__or2_2   A =   6.26  Df =4897.4-3271.6 ps  S =  86.9 ps  Cin =  1.5 ff  Cout =  14.8 ff  Cmax = 299.4 ff  G =  960  
ABC: Path 12 --    5691 : 3    5 sky130_fd_sc_hd__or3_4   A =  11.26  Df =5262.2-3488.6 ps  S =  84.3 ps  Cin =  2.4 ff  Cout =  15.9 ff  Cmax = 531.9 ff  G =  636  
ABC: Path 13 --    5738 : 2    4 sky130_fd_sc_hd__or2_2   A =   6.26  Df =5609.2-3689.3 ps  S =  86.9 ps  Cin =  1.5 ff  Cout =  14.8 ff  Cmax = 299.4 ff  G =  960  
ABC: Path 14 --    5762 : 3    4 sky130_fd_sc_hd__or3_4   A =  11.26  Df =5971.2-3906.0 ps  S =  82.5 ps  Cin =  2.4 ff  Cout =  14.8 ff  Cmax = 531.9 ff  G =  592  
ABC: Path 15 --    5789 : 3    5 sky130_fd_sc_hd__or3_4   A =  11.26  Df =6334.9-4132.6 ps  S =  84.3 ps  Cin =  2.4 ff  Cout =  15.9 ff  Cmax = 531.9 ff  G =  636  
ABC: Path 16 --    5837 : 2    4 sky130_fd_sc_hd__or2_2   A =   6.26  Df =6682.0-4333.2 ps  S =  86.9 ps  Cin =  1.5 ff  Cout =  14.8 ff  Cmax = 299.4 ff  G =  960  
ABC: Path 17 --    5861 : 3    4 sky130_fd_sc_hd__or3_4   A =  11.26  Df =7043.9-4550.0 ps  S =  82.5 ps  Cin =  2.4 ff  Cout =  14.8 ff  Cmax = 531.9 ff  G =  592  
ABC: Path 18 --    5886 : 3    5 sky130_fd_sc_hd__or3_4   A =  11.26  Df =7410.2-4777.1 ps  S =  85.9 ps  Cin =  2.4 ff  Cout =  16.9 ff  Cmax = 531.9 ff  G =  675  
ABC: Path 19 --    5934 : 2    4 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7689.8-4920.8 ps  S =  60.4 ps  Cin =  2.4 ff  Cout =  14.8 ff  Cmax = 514.5 ff  G =  583  
ABC: Path 20 --    5958 : 3    4 sky130_fd_sc_hd__or3_4   A =  11.26  Df =8043.3-5139.2 ps  S =  82.5 ps  Cin =  2.4 ff  Cout =  14.8 ff  Cmax = 531.9 ff  G =  592  
ABC: Path 21 --    5983 : 3    4 sky130_fd_sc_hd__or3_4   A =  11.26  Df =8401.6-5365.4 ps  S =  80.9 ps  Cin =  2.4 ff  Cout =  13.7 ff  Cmax = 531.9 ff  G =  552  
ABC: Path 22 --    6006 : 3    3 sky130_fd_sc_hd__or3_2   A =   7.51  Df =8847.4-5686.8 ps  S =  97.1 ps  Cin =  1.5 ff  Cout =   9.1 ff  Cmax = 310.4 ff  G =  567  
ABC: Path 23 --    6018 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =9159.3-5875.9 ps  S =  71.6 ps  Cin =  1.5 ff  Cout =   9.1 ff  Cmax = 299.4 ff  G =  593  
ABC: Path 24 --    6031 : 2    3 sky130_fd_sc_hd__or2_2   A =   6.26  Df =9465.3-6054.6 ps  S =  74.3 ps  Cin =  1.5 ff  Cout =  10.1 ff  Cmax = 299.4 ff  G =  659  
ABC: Path 25 --    6042 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =9710.5-6177.8 ps  S =  54.2 ps  Cin =  2.4 ff  Cout =  10.1 ff  Cmax = 514.5 ff  G =  400  
ABC: Path 26 --    6053 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =9947.8-6299.8 ps  S =  54.1 ps  Cin =  2.4 ff  Cout =  10.0 ff  Cmax = 514.5 ff  G =  397  
ABC: Path 27 --    6066 : 5    1 sky130_fd_sc_hd__o32a_2  A =  11.26  Df =10313.2-6521.2 ps  S =  58.9 ps  Cin =  2.3 ff  Cout =   4.5 ff  Cmax = 300.3 ff  G =  187  
ABC: Path 28 --    6067 : 2    1 sky130_fd_sc_hd__nor2b_2 A =   8.76  Df =10411.4-6588.0 ps  S =  58.9 ps  Cin =  2.9 ff  Cout =   2.5 ff  Cmax = 142.8 ff  G =   83  
ABC: Path 29 --    6068 : 1    1 sky130_fd_sc_hd__buf_4   A =   7.51  Df =10571.1-6586.5 ps  S = 102.7 ps  Cin =  2.4 ff  Cout =  33.4 ff  Cmax = 561.2 ff  G = 1393  
ABC: Start-point = pi1598 (\get_inp_inp1 [0]).  End-point = po274 ($auto$rtlil.cc:2669:MuxGate$86372).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 1808/ 1807  lat =    0  nd = 30449  edge =  79503  area =268821.89  delay =34.00  lev = 34
ABC: + write_blif /tmp/yosys-abc-uE929d/output.blif 

54.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or4b_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31a_4 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21oi_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_12 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__buf_8 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__buf_6 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:       28
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__buf_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand4b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor4b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__o41ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:       45
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:       33
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:       72
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:       92
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:       40
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:      498
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:       70
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:      133
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      200
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:      252
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:      344
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:      206
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:      650
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:      322
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       64
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:       31
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:      440
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:      100
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      201
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:      149
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:      141
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:     2129
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:      430
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:      526
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:      172
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:       59
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      502
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:     1503
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:      344
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:       52
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      879
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:     1122
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:     1042
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      529
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      715
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:     1775
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:     2278
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:     1322
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      807
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      995
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:      258
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:     1289
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:     2109
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:      365
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:     4053
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      682
ABC RESULTS:        internal signals:    36208
ABC RESULTS:           input signals:     1808
ABC RESULTS:          output signals:     1807
Removing temp directory.

55. Executing SETUNDEF pass (replace undef values with defined constants).

56. Executing HILOMAP pass (mapping to constant drivers).

57. Executing SPLITNETS pass (splitting up multi-bit signals).

58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 522 unused cells and 40900 unused wires.
<suppressed ~2717 debug messages>

59. Executing INSBUF pass (insert buffer cells for connected wires).
Add mk_mul/$auto$insbuf.cc:97:execute$123995: \RDY_get_out_fst -> \RDY_get_out_snd

60. Executing CHECK pass (checking for obvious problems).
Checking module mk_mul...
Warning: Wire mk_mul.\get_out_snd [127] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [126] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [125] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [124] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [123] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [122] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [121] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [120] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [119] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [118] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [117] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [116] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [115] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [114] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [113] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [112] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [111] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [110] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [109] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [108] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [107] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [106] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [105] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [104] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [103] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [102] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [101] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [100] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [99] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [98] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [97] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [96] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [95] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [94] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [93] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [92] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [91] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [90] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [89] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [88] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [87] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [86] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [85] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [84] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [83] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [82] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [81] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [80] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [79] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [78] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [77] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [76] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [75] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [74] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [73] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [72] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [71] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [70] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [69] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [68] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [67] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [66] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [65] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [64] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [63] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [62] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [61] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [60] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [59] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [58] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [57] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [56] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [55] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [54] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [53] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [52] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [51] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [50] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [49] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [48] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [47] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [46] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [45] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [44] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [43] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [42] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [41] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [40] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [39] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [38] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [37] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [36] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [35] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [34] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [33] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [32] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [31] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [30] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [29] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [28] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [27] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [26] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [25] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [24] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [23] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [22] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [21] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [20] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [19] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [18] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [17] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [16] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [15] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [14] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [13] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [12] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [11] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [10] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [9] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [8] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [7] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [6] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [5] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [4] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [3] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [2] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [1] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [0] is used but has no driver.
Warning: Wire mk_mul.\get_out_fst is used but has no driver.
Warning: Wire mk_mul.\RDY_get_out_snd is used but has no driver.
Warning: Wire mk_mul.\RDY_get_out_fst is used but has no driver.
Warning: Wire mk_mul.\RDY_get_inp is used but has no driver.
Found and reported 132 problems.

61. Printing statistics.

=== mk_mul ===

   Number of wires:              32006
   Number of wire bits:          32259
   Number of public wires:        1686
   Number of public wire bits:    1939
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              32128
     sky130_fd_sc_hd__a2111o_2      33
     sky130_fd_sc_hd__a2111oi_2      6
     sky130_fd_sc_hd__a211o_2      200
     sky130_fd_sc_hd__a211oi_2     149
     sky130_fd_sc_hd__a21bo_2      201
     sky130_fd_sc_hd__a21boi_2     344
     sky130_fd_sc_hd__a21o_2      1322
     sky130_fd_sc_hd__a21oi_2     1503
     sky130_fd_sc_hd__a21oi_4        2
     sky130_fd_sc_hd__a221o_2       37
     sky130_fd_sc_hd__a221oi_2      17
     sky130_fd_sc_hd__a22o_2      1289
     sky130_fd_sc_hd__a22oi_2      440
     sky130_fd_sc_hd__a2bb2o_2     322
     sky130_fd_sc_hd__a311o_2       40
     sky130_fd_sc_hd__a311oi_2       7
     sky130_fd_sc_hd__a31o_2       344
     sky130_fd_sc_hd__a31oi_2       52
     sky130_fd_sc_hd__a32o_2       498
     sky130_fd_sc_hd__a32oi_2        3
     sky130_fd_sc_hd__a41o_2        12
     sky130_fd_sc_hd__a41oi_2        4
     sky130_fd_sc_hd__and2_2       995
     sky130_fd_sc_hd__and2b_2      502
     sky130_fd_sc_hd__and3_2       715
     sky130_fd_sc_hd__and3b_2       70
     sky130_fd_sc_hd__and4_2       879
     sky130_fd_sc_hd__and4b_2       19
     sky130_fd_sc_hd__and4bb_2      17
     sky130_fd_sc_hd__buf_1       1775
     sky130_fd_sc_hd__buf_12         1
     sky130_fd_sc_hd__buf_2          1
     sky130_fd_sc_hd__buf_4          2
     sky130_fd_sc_hd__buf_6          1
     sky130_fd_sc_hd__buf_8          2
     sky130_fd_sc_hd__dfxtp_2     1678
     sky130_fd_sc_hd__inv_2        807
     sky130_fd_sc_hd__mux2_2        14
     sky130_fd_sc_hd__nand2_2     4053
     sky130_fd_sc_hd__nand2b_2      19
     sky130_fd_sc_hd__nand3_2      529
     sky130_fd_sc_hd__nand3b_2      15
     sky130_fd_sc_hd__nand4_2       92
     sky130_fd_sc_hd__nand4b_2       2
     sky130_fd_sc_hd__nor2_2      2278
     sky130_fd_sc_hd__nor2b_2        7
     sky130_fd_sc_hd__nor3_2       206
     sky130_fd_sc_hd__nor3b_2       25
     sky130_fd_sc_hd__nor4_2        24
     sky130_fd_sc_hd__nor4b_2        5
     sky130_fd_sc_hd__o2111a_2      45
     sky130_fd_sc_hd__o2111ai_2     10
     sky130_fd_sc_hd__o211a_2      365
     sky130_fd_sc_hd__o211ai_2      72
     sky130_fd_sc_hd__o21a_2       682
     sky130_fd_sc_hd__o21ai_2     1122
     sky130_fd_sc_hd__o21ba_2      430
     sky130_fd_sc_hd__o21bai_2     252
     sky130_fd_sc_hd__o221a_2      258
     sky130_fd_sc_hd__o221ai_2       5
     sky130_fd_sc_hd__o22a_2        64
     sky130_fd_sc_hd__o22ai_2       16
     sky130_fd_sc_hd__o2bb2a_2     172
     sky130_fd_sc_hd__o2bb2ai_2     14
     sky130_fd_sc_hd__o311a_2       31
     sky130_fd_sc_hd__o311ai_2      13
     sky130_fd_sc_hd__o31a_2       133
     sky130_fd_sc_hd__o31a_4         1
     sky130_fd_sc_hd__o31ai_2       59
     sky130_fd_sc_hd__o32a_2        18
     sky130_fd_sc_hd__o41a_2        17
     sky130_fd_sc_hd__o41ai_2        2
     sky130_fd_sc_hd__or2_2       2109
     sky130_fd_sc_hd__or2_4         12
     sky130_fd_sc_hd__or2b_2       526
     sky130_fd_sc_hd__or3_2        650
     sky130_fd_sc_hd__or3_4         18
     sky130_fd_sc_hd__or3b_2       141
     sky130_fd_sc_hd__or4_2        100
     sky130_fd_sc_hd__or4_4         28
     sky130_fd_sc_hd__or4b_2        20
     sky130_fd_sc_hd__or4b_4         1
     sky130_fd_sc_hd__or4bb_2       13
     sky130_fd_sc_hd__xnor2_2     2129
     sky130_fd_sc_hd__xor2_2      1042

   Chip area for module '\mk_mul': 304465.756800

62. Executing Verilog backend.
Dumping module `\mk_mul'.

Warnings: 133 unique messages, 133 total
End of script. Logfile hash: 255105c482, CPU: user 20.74s system 0.22s, MEM: 188.70 MB peak
Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)
Time spent: 70% 2x abc (46 sec), 11% 35x opt_expr (7 sec), ...
