
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openlane/designs/mk_mul/src/mk_mul.v
Parsing SystemVerilog input from `/openlane/designs/mk_mul/src/mk_mul.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\mk_mul'.
Successfully finished Verilog frontend.

2. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/mk_mul/runs/RUN_2023.12.11_04.52.09/tmp/synthesis/hierarchy.dot'.
Dumping module mk_mul to page 1.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \mk_mul

3.2. Analyzing design hierarchy..
Top module:  \mk_mul
Removed 0 unused modules.
Renaming module mk_mul to mk_mul.

4. Executing TRIBUF pass.

5. Executing HIERARCHY pass (managing design hierarchy).

5.1. Analyzing design hierarchy..
Top module:  \mk_mul

5.2. Analyzing design hierarchy..
Top module:  \mk_mul
Removed 0 unused modules.

6. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141 in module mk_mul.
Removed a total of 0 dead cases.

8. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

9. Executing PROC_INIT pass (extract init attributes).

10. Executing PROC_ARST pass (detect async resets in processes).

11. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~28 debug messages>

12. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
     1/27: $0\stg4[0:0]
     2/27: $0\stg3[0:0]
     3/27: $0\stg2[0:0]
     4/27: $0\stg1[0:0]
     5/27: $0\sign_3[0:0]
     6/27: $0\sign_2[0:0]
     7/27: $0\sign_1[0:0]
     8/27: $0\sign[0:0]
     9/27: $0\result[129:0]
    10/27: $0\pp9_1[139:0]
    11/27: $0\pp8_1[139:0]
    12/27: $0\pp7_1[139:0]
    13/27: $0\pp6_1[139:0]
    14/27: $0\pp5_1[139:0]
    15/27: $0\pp4_1[139:0]
    16/27: $0\pp4[129:0]
    17/27: $0\pp3_1[139:0]
    18/27: $0\pp3[129:0]
    19/27: $0\pp2_1[139:0]
    20/27: $0\pp2[129:0]
    21/27: $0\pp1_1[139:0]
    22/27: $0\pp10_1[139:0]
    23/27: $0\pp1[129:0]
    24/27: $0\pp0_1[139:0]
    25/27: $0\pp0[129:0]
    26/27: $0\operand2[63:0]
    27/27: $0\operand1[63:0]

13. Executing PROC_DLATCH pass (convert process syncs to latches).

14. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\mk_mul.\operand1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$278' with positive edge clock.
Creating register for signal `\mk_mul.\operand2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$279' with positive edge clock.
Creating register for signal `\mk_mul.\pp0' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$280' with positive edge clock.
Creating register for signal `\mk_mul.\pp0_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$281' with positive edge clock.
Creating register for signal `\mk_mul.\pp1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$282' with positive edge clock.
Creating register for signal `\mk_mul.\pp10_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$283' with positive edge clock.
Creating register for signal `\mk_mul.\pp1_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$284' with positive edge clock.
Creating register for signal `\mk_mul.\pp2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$285' with positive edge clock.
Creating register for signal `\mk_mul.\pp2_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$286' with positive edge clock.
Creating register for signal `\mk_mul.\pp3' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$287' with positive edge clock.
Creating register for signal `\mk_mul.\pp3_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$288' with positive edge clock.
Creating register for signal `\mk_mul.\pp4' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$289' with positive edge clock.
Creating register for signal `\mk_mul.\pp4_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$290' with positive edge clock.
Creating register for signal `\mk_mul.\pp5_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$291' with positive edge clock.
Creating register for signal `\mk_mul.\pp6_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$292' with positive edge clock.
Creating register for signal `\mk_mul.\pp7_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$293' with positive edge clock.
Creating register for signal `\mk_mul.\pp8_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$294' with positive edge clock.
Creating register for signal `\mk_mul.\pp9_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$295' with positive edge clock.
Creating register for signal `\mk_mul.\result' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$296' with positive edge clock.
Creating register for signal `\mk_mul.\sign' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$297' with positive edge clock.
Creating register for signal `\mk_mul.\sign_1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$298' with positive edge clock.
Creating register for signal `\mk_mul.\sign_2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$299' with positive edge clock.
Creating register for signal `\mk_mul.\sign_3' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$300' with positive edge clock.
Creating register for signal `\mk_mul.\stg1' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$301' with positive edge clock.
Creating register for signal `\mk_mul.\stg2' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$302' with positive edge clock.
Creating register for signal `\mk_mul.\stg3' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$303' with positive edge clock.
Creating register for signal `\mk_mul.\stg4' using process `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
  created $dff cell `$procdff$304' with positive edge clock.

15. Executing PROC_MEMWR pass (convert process memory writes to cells).

16. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 28 empty switches in `\mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
Removing empty process `mk_mul.$proc$/openlane/designs/mk_mul/src/mk_mul.v:616$141'.
Cleaned up 28 empty switches.

17. Executing CHECK pass (checking for obvious problems).
Checking module mk_mul...
Found and reported 0 problems.

18. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~28 debug messages>

19. Executing FLATTEN pass (flatten design).

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 1 unused cells and 219 unused wires.
<suppressed ~2 debug messages>

22. Executing OPT pass (performing simple optimizations).

22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:362$6: \get_inp_inp2 -> { 1'0 \get_inp_inp2 [62:0] }
      Replacing known input bits on port A of cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:358$5: \get_inp_inp1 -> { 1'0 \get_inp_inp1 [62:0] }
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

22.6. Executing OPT_DFF pass (perform DFF optimizations).

22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

22.9. Finished OPT passes. (There is nothing left to do.)

23. Executing FSM pass (extract and optimize FSM).

23.1. Executing FSM_DETECT pass (finding FSMs in design).

23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~91 debug messages>

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$304 ($dff) from module mk_mul (D = $procmux$143_Y, Q = \stg4, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$305 ($sdff) from module mk_mul (D = 1'1, Q = \stg4).
Adding SRST signal on $procdff$303 ($dff) from module mk_mul (D = $procmux$148_Y, Q = \stg3, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$307 ($sdff) from module mk_mul (D = 1'1, Q = \stg3).
Adding SRST signal on $procdff$302 ($dff) from module mk_mul (D = $procmux$153_Y, Q = \stg2, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$309 ($sdff) from module mk_mul (D = 1'1, Q = \stg2).
Adding SRST signal on $procdff$301 ($dff) from module mk_mul (D = $procmux$158_Y, Q = \stg1, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$311 ($sdff) from module mk_mul (D = 1'1, Q = \stg1).
Adding SRST signal on $procdff$300 ($dff) from module mk_mul (D = $procmux$163_Y, Q = \sign_3, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$313 ($sdff) from module mk_mul (D = \sign_2, Q = \sign_3).
Adding SRST signal on $procdff$299 ($dff) from module mk_mul (D = $procmux$168_Y, Q = \sign_2, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$315 ($sdff) from module mk_mul (D = \sign_1, Q = \sign_2).
Adding SRST signal on $procdff$298 ($dff) from module mk_mul (D = $procmux$173_Y, Q = \sign_1, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$317 ($sdff) from module mk_mul (D = \sign, Q = \sign_1).
Adding SRST signal on $procdff$297 ($dff) from module mk_mul (D = $procmux$178_Y, Q = \sign, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$319 ($sdff) from module mk_mul (D = \sign$D_IN, Q = \sign).
Adding SRST signal on $procdff$296 ($dff) from module mk_mul (D = $procmux$183_Y, Q = \result, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$321 ($sdff) from module mk_mul (D = \result$D_IN, Q = \result).
Adding SRST signal on $procdff$295 ($dff) from module mk_mul (D = $procmux$188_Y, Q = \pp9_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$323 ($sdff) from module mk_mul (D = { \o1__h3232 \o2__h3233 }, Q = \pp9_1).
Adding SRST signal on $procdff$294 ($dff) from module mk_mul (D = $procmux$193_Y, Q = \pp8_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$325 ($sdff) from module mk_mul (D = { \o1__h2981 \o2__h2982 }, Q = \pp8_1).
Adding SRST signal on $procdff$293 ($dff) from module mk_mul (D = $procmux$198_Y, Q = \pp7_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$327 ($sdff) from module mk_mul (D = { \o1__h2730 \o2__h2731 }, Q = \pp7_1).
Adding SRST signal on $procdff$292 ($dff) from module mk_mul (D = $procmux$203_Y, Q = \pp6_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$329 ($sdff) from module mk_mul (D = { \o1__h2479 \o2__h2480 }, Q = \pp6_1).
Adding SRST signal on $procdff$291 ($dff) from module mk_mul (D = $procmux$208_Y, Q = \pp5_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$331 ($sdff) from module mk_mul (D = { \o1__h2228 \o2__h2229 }, Q = \pp5_1).
Adding SRST signal on $procdff$290 ($dff) from module mk_mul (D = $procmux$213_Y, Q = \pp4_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$333 ($sdff) from module mk_mul (D = { \o1__h1977 \o2__h1978 }, Q = \pp4_1).
Adding SRST signal on $procdff$289 ($dff) from module mk_mul (D = $procmux$218_Y, Q = \pp4, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$335 ($sdff) from module mk_mul (D = \pp4$D_IN, Q = \pp4).
Adding SRST signal on $procdff$288 ($dff) from module mk_mul (D = $procmux$223_Y, Q = \pp3_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$337 ($sdff) from module mk_mul (D = { \o1__h1726 \o2__h1727 }, Q = \pp3_1).
Adding SRST signal on $procdff$287 ($dff) from module mk_mul (D = $procmux$228_Y, Q = \pp3, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$339 ($sdff) from module mk_mul (D = \pp3$D_IN, Q = \pp3).
Adding SRST signal on $procdff$286 ($dff) from module mk_mul (D = $procmux$233_Y, Q = \pp2_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$341 ($sdff) from module mk_mul (D = { \o1__h1475 \o2__h1476 }, Q = \pp2_1).
Adding SRST signal on $procdff$285 ($dff) from module mk_mul (D = $procmux$238_Y, Q = \pp2, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$343 ($sdff) from module mk_mul (D = \pp2$D_IN, Q = \pp2).
Adding SRST signal on $procdff$284 ($dff) from module mk_mul (D = $procmux$243_Y, Q = \pp1_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$345 ($sdff) from module mk_mul (D = { \o1__h1224 \o2__h1225 }, Q = \pp1_1).
Adding SRST signal on $procdff$283 ($dff) from module mk_mul (D = $procmux$248_Y, Q = \pp10_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$347 ($sdff) from module mk_mul (D = { \o1__h3483 \o2__h3484 }, Q = \pp10_1).
Adding SRST signal on $procdff$282 ($dff) from module mk_mul (D = $procmux$253_Y, Q = \pp1, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$349 ($sdff) from module mk_mul (D = \pp1$D_IN, Q = \pp1).
Adding SRST signal on $procdff$281 ($dff) from module mk_mul (D = $procmux$258_Y, Q = \pp0_1, rval = 140'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$351 ($sdff) from module mk_mul (D = { \o1__h958 \o2__h959 }, Q = \pp0_1).
Adding SRST signal on $procdff$280 ($dff) from module mk_mul (D = $procmux$263_Y, Q = \pp0, rval = 130'0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$353 ($sdff) from module mk_mul (D = \pp0$D_IN, Q = \pp0).
Adding SRST signal on $procdff$279 ($dff) from module mk_mul (D = $procmux$268_Y, Q = \operand2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$355 ($sdff) from module mk_mul (D = \operand2$D_IN, Q = \operand2).
Adding SRST signal on $procdff$278 ($dff) from module mk_mul (D = $procmux$273_Y, Q = \operand1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$357 ($sdff) from module mk_mul (D = \operand1$D_IN, Q = \operand1).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 54 unused cells and 54 unused wires.
<suppressed ~55 debug messages>

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

24.9. Rerunning OPT passes. (Maybe there is more to do..)

24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

24.13. Executing OPT_DFF pass (perform DFF optimizations).

24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

24.16. Finished OPT passes. (There is nothing left to do.)

25. Executing WREDUCE pass (reducing word size of cells).
Removed top 54 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:366$7 ($add).
Removed top 42 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:374$8 ($add).
Removed top 30 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:386$9 ($add).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:487$34 ($mux).
Removed top 63 bits (of 64) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:489$37 ($add).
Removed top 63 bits (of 64) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:490$39 ($add).
Removed top 127 bits (of 128) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:491$41 ($add).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:492$42 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:493$43 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:494$44 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:495$45 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:496$46 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:497$47 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:498$48 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:499$49 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:500$50 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:501$51 ($mux).
Removed top 6 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:502$52 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:503$53 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:504$54 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:505$55 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:506$56 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:507$57 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:508$58 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:509$59 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:510$60 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:511$61 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:512$62 ($mux).
Removed top 5 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:513$63 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:514$64 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:515$65 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:516$66 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:517$67 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:518$68 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:519$69 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:520$70 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:521$71 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:522$72 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:523$73 ($mux).
Removed top 4 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:524$74 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:525$75 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:526$76 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:527$77 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:528$78 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:529$79 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:530$80 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:531$81 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:532$82 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:533$83 ($mux).
Removed top 3 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:534$84 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:535$85 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:536$86 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:537$87 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:538$88 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:539$89 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:540$90 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:541$91 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:542$92 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:543$93 ($mux).
Removed top 2 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:544$94 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:545$95 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:546$96 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:547$97 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:548$98 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:549$99 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:550$100 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:551$101 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:552$102 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:553$103 ($mux).
Removed top 1 bits (of 70) from mux cell mk_mul.$ternary$/openlane/designs/mk_mul/src/mk_mul.v:554$104 ($mux).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:555$105 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:555$105 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:555$105 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:556$106 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:556$106 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:556$106 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:557$107 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:557$107 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:557$107 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:558$108 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:558$108 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:558$108 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:559$109 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:559$109 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:559$109 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:560$110 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:560$110 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:560$110 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:561$111 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:561$111 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:561$111 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:562$112 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:562$112 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:562$112 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:563$113 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:563$113 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:563$113 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:564$114 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:564$114 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:564$114 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:565$115 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:565$115 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:565$115 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:566$116 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:566$116 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:566$116 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:567$117 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:567$117 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:567$117 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:568$118 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:568$118 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:568$118 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:569$119 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:569$119 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:569$119 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:570$120 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:570$120 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:570$120 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:571$121 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:571$121 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:571$121 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:572$122 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:572$122 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:572$122 ($add).
Removed top 3 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:573$123 ($add).
Removed top 2 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:573$123 ($add).
Removed top 1 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:573$123 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:574$124 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:574$124 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:574$124 ($add).
Removed top 54 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:575$125 ($add).
Removed top 60 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:576$126 ($add).
Removed top 60 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:576$126 ($add).
Removed top 59 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:576$126 ($add).
Removed top 42 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:578$127 ($add).
Removed top 48 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:579$128 ($add).
Removed top 48 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:579$128 ($add).
Removed top 47 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:579$128 ($add).
Removed top 30 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:581$129 ($add).
Removed top 36 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:582$130 ($add).
Removed top 36 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:582$130 ($add).
Removed top 35 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:582$130 ($add).
Removed top 18 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:584$131 ($add).
Removed top 18 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:585$132 ($add).
Removed top 24 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:586$133 ($add).
Removed top 24 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:586$133 ($add).
Removed top 23 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:586$133 ($add).
Removed top 6 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:588$134 ($add).
Removed top 6 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:589$135 ($add).
Removed top 12 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:590$136 ($add).
Removed top 12 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:590$136 ($add).
Removed top 11 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:590$136 ($add).
Removed top 6 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:595$140 ($add).
Removed top 5 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:595$140 ($add).
Removed top 4 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:595$140 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$322 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:430$12 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:430$12 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:430$12 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:592$137 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:592$137 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:592$137 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$336 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:402$11 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:402$11 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:402$11 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:593$138 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:593$138 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:593$138 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$340 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:394$10 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:394$10 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:394$10 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:588$134 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:588$134 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:594$139 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:594$139 ($add).
Removed top 2 bits (of 130) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:594$139 ($add).
Removed top 2 bits (of 140) from FF cell mk_mul.$auto$ff.cc:266:slice$348 ($sdffe).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$344 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:386$9 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:386$9 ($add).
Removed top 4 bits (of 70) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:476$23 ($add).
Removed top 4 bits (of 70) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:476$23 ($add).
Removed top 3 bits (of 70) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:476$23 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:584$131 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:584$131 ($add).
Removed top 11 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:589$135 ($add).
Removed top 5 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:589$135 ($add).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$354 ($sdffe).
Removed top 2 bits (of 130) from FF cell mk_mul.$auto$ff.cc:266:slice$350 ($sdffe).
Removed top 1 bits (of 138) from FF cell mk_mul.$auto$ff.cc:266:slice$348 ($sdffe).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:366$7 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:366$7 ($add).
Removed top 2 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:374$8 ($add).
Removed top 2 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:374$8 ($add).
Removed top 1 bits (of 128) from port B of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:394$10 ($add).
Removed top 35 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:581$129 ($add).
Removed top 29 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:581$129 ($add).
Removed top 23 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:585$132 ($add).
Removed top 17 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:585$132 ($add).
Removed top 59 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:575$125 ($add).
Removed top 53 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:575$125 ($add).
Removed top 47 bits (of 130) from port A of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:578$127 ($add).
Removed top 41 bits (of 130) from port Y of cell mk_mul.$add$/openlane/designs/mk_mul/src/mk_mul.v:578$127 ($add).
Removed top 3 bits (of 70) from wire mk_mul.o1__h3483.
Removed top 3 bits (of 70) from wire mk_mul.o2__h3484.
Removed top 2 bits (of 130) from wire mk_mul.pp0.
Removed top 2 bits (of 130) from wire mk_mul.pp0$D_IN.
Removed top 2 bits (of 130) from wire mk_mul.pp1.
Removed top 2 bits (of 130) from wire mk_mul.pp1$D_IN.
Removed top 2 bits (of 130) from wire mk_mul.pp2$D_IN.
Removed top 6 bits (of 70) from wire mk_mul.s1__h1218.
Removed top 6 bits (of 70) from wire mk_mul.s1__h1469.
Removed top 4 bits (of 70) from wire mk_mul.s3__h1220.
Removed top 29 bits (of 130) from wire mk_mul.x__h4025.
Removed top 60 bits (of 130) from wire mk_mul.y__h3771.

26. Executing PEEPOPT pass (run peephole optimizers).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

28. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mk_mul:
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:366$7 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:374$8 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:386$9 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:394$10 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:402$11 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:430$12 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:467$14 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:468$15 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:469$16 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:470$17 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:471$18 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:472$19 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:473$20 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:474$21 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:475$22 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:476$23 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:477$24 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:478$25 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:479$26 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:480$27 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:481$28 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:482$29 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:483$30 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:484$31 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:485$32 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:486$33 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:488$35 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:489$37 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:490$39 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:491$41 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:555$105 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:556$106 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:557$107 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:558$108 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:559$109 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:560$110 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:561$111 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:562$112 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:563$113 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:564$114 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:565$115 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:566$116 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:567$117 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:568$118 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:569$119 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:570$120 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:571$121 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:572$122 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:573$123 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:574$124 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:575$125 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:576$126 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:578$127 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:579$128 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:581$129 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:582$130 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:584$131 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:585$132 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:586$133 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:588$134 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:589$135 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:590$136 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:592$137 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:593$138 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:594$139 ($add).
  creating $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:595$140 ($add).
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:594$139 into $add$/openlane/designs/mk_mul/src/mk_mul.v:593$138.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:593$138 into $add$/openlane/designs/mk_mul/src/mk_mul.v:592$137.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:590$136 into $add$/openlane/designs/mk_mul/src/mk_mul.v:589$135.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:586$133 into $add$/openlane/designs/mk_mul/src/mk_mul.v:585$132.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:582$130 into $add$/openlane/designs/mk_mul/src/mk_mul.v:581$129.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:579$128 into $add$/openlane/designs/mk_mul/src/mk_mul.v:578$127.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:576$126 into $add$/openlane/designs/mk_mul/src/mk_mul.v:575$125.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:574$124 into $add$/openlane/designs/mk_mul/src/mk_mul.v:476$23.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:592$137 into $add$/openlane/designs/mk_mul/src/mk_mul.v:430$12.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:588$134 into $add$/openlane/designs/mk_mul/src/mk_mul.v:402$11.
  merging $macc model for $add$/openlane/designs/mk_mul/src/mk_mul.v:584$131 into $add$/openlane/designs/mk_mul/src/mk_mul.v:394$10.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:595$140.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:573$123.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:572$122.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:571$121.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:570$120.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:569$119.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:568$118.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:567$117.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:566$116.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:565$115.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:564$114.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:563$113.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:562$112.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:561$111.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:560$110.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:559$109.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:558$108.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:557$107.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:556$106.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:555$105.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:491$41.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:490$39.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:489$37.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:488$35.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:486$33.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:485$32.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:484$31.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:483$30.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:482$29.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:481$28.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:480$27.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:479$26.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:478$25.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:477$24.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:475$22.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:474$21.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:473$20.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:472$19.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:471$18.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:470$17.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:469$16.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:468$15.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:467$14.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:386$9.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:374$8.
  creating $alu model for $macc $add$/openlane/designs/mk_mul/src/mk_mul.v:366$7.
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:476$23: $auto$alumacc.cc:365:replace_macc$371
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:575$125: $auto$alumacc.cc:365:replace_macc$372
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:585$132: $auto$alumacc.cc:365:replace_macc$373
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:430$12: $auto$alumacc.cc:365:replace_macc$374
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:402$11: $auto$alumacc.cc:365:replace_macc$375
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:394$10: $auto$alumacc.cc:365:replace_macc$376
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:578$127: $auto$alumacc.cc:365:replace_macc$377
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:589$135: $auto$alumacc.cc:365:replace_macc$378
  creating $macc cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:581$129: $auto$alumacc.cc:365:replace_macc$379
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:366$7: $auto$alumacc.cc:485:replace_alu$380
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:374$8: $auto$alumacc.cc:485:replace_alu$383
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:386$9: $auto$alumacc.cc:485:replace_alu$386
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:467$14: $auto$alumacc.cc:485:replace_alu$389
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:468$15: $auto$alumacc.cc:485:replace_alu$392
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:469$16: $auto$alumacc.cc:485:replace_alu$395
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:470$17: $auto$alumacc.cc:485:replace_alu$398
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:471$18: $auto$alumacc.cc:485:replace_alu$401
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:472$19: $auto$alumacc.cc:485:replace_alu$404
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:473$20: $auto$alumacc.cc:485:replace_alu$407
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:474$21: $auto$alumacc.cc:485:replace_alu$410
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:475$22: $auto$alumacc.cc:485:replace_alu$413
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:477$24: $auto$alumacc.cc:485:replace_alu$416
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:478$25: $auto$alumacc.cc:485:replace_alu$419
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:479$26: $auto$alumacc.cc:485:replace_alu$422
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:480$27: $auto$alumacc.cc:485:replace_alu$425
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:481$28: $auto$alumacc.cc:485:replace_alu$428
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:482$29: $auto$alumacc.cc:485:replace_alu$431
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:483$30: $auto$alumacc.cc:485:replace_alu$434
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:484$31: $auto$alumacc.cc:485:replace_alu$437
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:485$32: $auto$alumacc.cc:485:replace_alu$440
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:486$33: $auto$alumacc.cc:485:replace_alu$443
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:488$35: $auto$alumacc.cc:485:replace_alu$446
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:489$37: $auto$alumacc.cc:485:replace_alu$449
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:490$39: $auto$alumacc.cc:485:replace_alu$452
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:491$41: $auto$alumacc.cc:485:replace_alu$455
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:555$105: $auto$alumacc.cc:485:replace_alu$458
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:556$106: $auto$alumacc.cc:485:replace_alu$461
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:557$107: $auto$alumacc.cc:485:replace_alu$464
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:558$108: $auto$alumacc.cc:485:replace_alu$467
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:559$109: $auto$alumacc.cc:485:replace_alu$470
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:560$110: $auto$alumacc.cc:485:replace_alu$473
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:561$111: $auto$alumacc.cc:485:replace_alu$476
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:562$112: $auto$alumacc.cc:485:replace_alu$479
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:563$113: $auto$alumacc.cc:485:replace_alu$482
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:564$114: $auto$alumacc.cc:485:replace_alu$485
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:565$115: $auto$alumacc.cc:485:replace_alu$488
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:566$116: $auto$alumacc.cc:485:replace_alu$491
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:567$117: $auto$alumacc.cc:485:replace_alu$494
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:568$118: $auto$alumacc.cc:485:replace_alu$497
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:569$119: $auto$alumacc.cc:485:replace_alu$500
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:570$120: $auto$alumacc.cc:485:replace_alu$503
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:571$121: $auto$alumacc.cc:485:replace_alu$506
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:572$122: $auto$alumacc.cc:485:replace_alu$509
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:573$123: $auto$alumacc.cc:485:replace_alu$512
  creating $alu cell for $add$/openlane/designs/mk_mul/src/mk_mul.v:595$140: $auto$alumacc.cc:485:replace_alu$515
  created 46 $alu and 9 $macc cells.

29. Executing SHARE pass (SAT-based resource sharing).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 67 on $auto$ff.cc:266:slice$348 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 68 on $auto$ff.cc:266:slice$348 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 69 on $auto$ff.cc:266:slice$348 ($sdffe) from module mk_mul.

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 11 unused cells and 5 unused wires.
<suppressed ~16 debug messages>

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

30.9. Rerunning OPT passes. (Maybe there is more to do..)

30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

30.13. Executing OPT_DFF pass (perform DFF optimizations).

30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

30.16. Finished OPT passes. (There is nothing left to do.)

31. Executing MEMORY pass.

31.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

31.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

31.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

31.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

31.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

31.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

31.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

31.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

31.10. Executing MEMORY_COLLECT pass (generating $mem cells).

32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~746 debug messages>

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

33.3. Executing OPT_DFF pass (perform DFF optimizations).

33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 0 unused cells and 144 unused wires.
<suppressed ~1 debug messages>

33.5. Finished fast OPT passes.

34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:487$34:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\o2__h3484
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\o2__h3484 [66:3]
      New connections: \o2__h3484 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:503$53:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h1219 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h1219 [64:1]
      New connections: \s2__h1219 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:504$54:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h1470 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h1470 [64:1]
      New connections: \s2__h1470 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:505$55:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h1721 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h1721 [64:1]
      New connections: \s2__h1721 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:506$56:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h1972 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h1972 [64:1]
      New connections: \s2__h1972 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:507$57:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2223 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2223 [64:1]
      New connections: \s2__h2223 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:508$58:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2474 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2474 [64:1]
      New connections: \s2__h2474 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:509$59:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2725 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2725 [64:1]
      New connections: \s2__h2725 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:510$60:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h2976 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h2976 [64:1]
      New connections: \s2__h2976 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:511$61:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h3227 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h3227 [64:1]
      New connections: \s2__h3227 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:512$62:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h3478 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h3478 [64:1]
      New connections: \s2__h3478 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:513$63:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 1'0 }, Y=\s2__h953 [64:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s2__h953 [64:1]
      New connections: \s2__h953 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:514$64:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h1220
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h1220 [65:2]
      New connections: \s3__h1220 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:515$65:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h1471 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h1471 [65:2]
      New connections: \s3__h1471 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:516$66:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h1722 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h1722 [65:2]
      New connections: \s3__h1722 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:517$67:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h1973 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h1973 [65:2]
      New connections: \s3__h1973 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:518$68:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2224 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2224 [65:2]
      New connections: \s3__h2224 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:519$69:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2475 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2475 [65:2]
      New connections: \s3__h2475 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:520$70:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2726 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2726 [65:2]
      New connections: \s3__h2726 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:521$71:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h2977 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h2977 [65:2]
      New connections: \s3__h2977 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:522$72:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h3228 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h3228 [65:2]
      New connections: \s3__h3228 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:523$73:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h3479 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h3479 [65:2]
      New connections: \s3__h3479 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:524$74:
      Old ports: A=66'000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 2'00 }, Y=\s3__h954 [65:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s3__h954 [65:2]
      New connections: \s3__h954 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:525$75:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h1221 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h1221 [66:3]
      New connections: \s4__h1221 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:526$76:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h1472 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h1472 [66:3]
      New connections: \s4__h1472 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:527$77:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h1723 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h1723 [66:3]
      New connections: \s4__h1723 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:528$78:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h1974 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h1974 [66:3]
      New connections: \s4__h1974 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:529$79:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2225 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2225 [66:3]
      New connections: \s4__h2225 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:530$80:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2476 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2476 [66:3]
      New connections: \s4__h2476 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:531$81:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2727 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2727 [66:3]
      New connections: \s4__h2727 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:532$82:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h2978 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h2978 [66:3]
      New connections: \s4__h2978 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:533$83:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h3229 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h3229 [66:3]
      New connections: \s4__h3229 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:534$84:
      Old ports: A=67'0000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 3'000 }, Y=\s4__h955 [66:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s4__h955 [66:3]
      New connections: \s4__h955 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:535$85:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h1222 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h1222 [67:4]
      New connections: \s5__h1222 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:536$86:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h1473 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h1473 [67:4]
      New connections: \s5__h1473 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:537$87:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h1724 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h1724 [67:4]
      New connections: \s5__h1724 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:538$88:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h1975 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h1975 [67:4]
      New connections: \s5__h1975 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:539$89:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2226 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2226 [67:4]
      New connections: \s5__h2226 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:540$90:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2477 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2477 [67:4]
      New connections: \s5__h2477 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:541$91:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2728 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2728 [67:4]
      New connections: \s5__h2728 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:542$92:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h2979 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h2979 [67:4]
      New connections: \s5__h2979 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:543$93:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h3230 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h3230 [67:4]
      New connections: \s5__h3230 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:544$94:
      Old ports: A=68'00000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 4'0000 }, Y=\s5__h956 [67:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s5__h956 [67:4]
      New connections: \s5__h956 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:545$95:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h1223 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h1223 [68:5]
      New connections: \s6__h1223 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:546$96:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h1474 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h1474 [68:5]
      New connections: \s6__h1474 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:547$97:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h1725 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h1725 [68:5]
      New connections: \s6__h1725 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:548$98:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h1976 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h1976 [68:5]
      New connections: \s6__h1976 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:549$99:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2227 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2227 [68:5]
      New connections: \s6__h2227 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:550$100:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2478 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2478 [68:5]
      New connections: \s6__h2478 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:551$101:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2729 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2729 [68:5]
      New connections: \s6__h2729 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:552$102:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h2980 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h2980 [68:5]
      New connections: \s6__h2980 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:553$103:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h3231 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h3231 [68:5]
      New connections: \s6__h3231 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$/openlane/designs/mk_mul/src/mk_mul.v:554$104:
      Old ports: A=69'000000000000000000000000000000000000000000000000000000000000000000000, B={ \operand1 5'00000 }, Y=\s6__h957 [68:0]
      New ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\operand1, Y=\s6__h957 [68:5]
      New connections: \s6__h957 [4:0] = 5'00000
  Optimizing cells in module \mk_mul.
Performed a total of 53 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.6. Executing OPT_SHARE pass.

35.7. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$324 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$324 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$324 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$326 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$326 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$326 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$328 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$328 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$328 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$330 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$330 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$330 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$332 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$332 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$332 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$334 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$334 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$334 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$338 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$338 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$338 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$342 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$342 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$342 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 102 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 103 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 104 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 105 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 106 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 107 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 108 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 109 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 110 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 111 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 112 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 113 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 114 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 115 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 116 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 117 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 118 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 119 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 120 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 121 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 122 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 123 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 124 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 125 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 126 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 127 on $auto$ff.cc:266:slice$344 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$346 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$346 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$346 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 90 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 91 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 92 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 93 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 94 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 95 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 96 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 97 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 98 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 99 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 100 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 101 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 102 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 103 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 104 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 105 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 106 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 107 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 108 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 109 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 110 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 111 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 112 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 113 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 114 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 115 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 116 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 117 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 118 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 119 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 120 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 121 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 122 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 123 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 124 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 125 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 126 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 127 on $auto$ff.cc:266:slice$350 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 137 on $auto$ff.cc:266:slice$352 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 138 on $auto$ff.cc:266:slice$352 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 139 on $auto$ff.cc:266:slice$352 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 78 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 79 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 80 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 81 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 82 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 83 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 84 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 85 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 86 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 87 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 88 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 89 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 90 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 91 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 92 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 93 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 94 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 95 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 96 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 97 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 98 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 99 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 100 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 101 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 102 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 103 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 104 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 105 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 106 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 107 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 108 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 109 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 110 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 111 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 112 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 113 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 114 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 115 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 116 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 117 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 118 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 119 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 120 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 121 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 122 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 123 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 124 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 125 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 126 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 127 on $auto$ff.cc:266:slice$354 ($sdffe) from module mk_mul.

35.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

35.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~40 debug messages>

35.10. Rerunning OPT passes. (Maybe there is more to do..)

35.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

35.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

35.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.14. Executing OPT_SHARE pass.

35.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$518 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$518 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$518 ($sdffe) from module mk_mul.

35.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

35.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

35.18. Rerunning OPT passes. (Maybe there is more to do..)

35.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

35.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

35.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.22. Executing OPT_SHARE pass.

35.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$833 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$833 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$833 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$834 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$834 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$834 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$835 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$835 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$835 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$836 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$836 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$836 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$837 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$837 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$837 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$838 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$838 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$838 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$839 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$839 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$839 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$840 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$840 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$840 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$842 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$842 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$842 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$844 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$844 ($sdffe) from module mk_mul.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$844 ($sdffe) from module mk_mul.

35.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

35.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

35.26. Rerunning OPT passes. (Maybe there is more to do..)

35.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

35.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

35.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

35.30. Executing OPT_SHARE pass.

35.31. Executing OPT_DFF pass (perform DFF optimizations).

35.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

35.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

35.34. Finished OPT passes. (There is nothing left to do.)

36. Executing TECHMAP pass (map to technology primitives).

36.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

36.2. Continuing TECHMAP pass.
Using template $paramod$4a36c8f54255b1e66b766d9531a976ba57da137e\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$ecbe5d7a893af0bc517570b4bece0868b006ac85\_90_alu for cells of type $alu.
Using template $paramod$eea3ba9f46bf8f651c66fe7eea33370a4cb078d8\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add { \pp2_1 [69:3] 15'000000000000000 } (82 bits, unsigned)
  add { \pp3_1 [69:3] 21'000000000000000000000 } (88 bits, unsigned)
  add { 3'000 \pp2_1 [136:70] 12'000000000000 } (82 bits, unsigned)
  add \x__h4158 [112:0] (113 bits, unsigned)
  add { \pp10_1 [136:70] 60'000000000000000000000000000000000000000000000000000000000000 } (127 bits, unsigned)
  add { 3'000 \pp7_1 [136:70] 42'000000000000000000000000000000000000000000 } (112 bits, unsigned)
  add \x__h4310 [124:0] (125 bits, unsigned)
  add { 1'0 \pp10_1 [66:3] 63'000000000000000000000000000000000000000000000000000000000000000 } (128 bits, unsigned)
  add { 3'000 \pp9_1 [136:70] 54'000000000000000000000000000000000000000000000000000000 } (124 bits, unsigned)
Using extmapper simplemap for cells of type $xor.
  add { \pp0_1 [69:3] 3'000 } (70 bits, unsigned)
  add { \pp1_1 [69:3] 9'000000000 } (76 bits, unsigned)
  add { 3'000 \pp0_1 [136:70] } (70 bits, unsigned)
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using template $paramod$2fff7390d0c2bf21f9d4a24170e0e0160f5d0249\_90_alu for cells of type $alu.
  add { \pp6_1 [69:3] 39'000000000000000000000000000000000000000 } (106 bits, unsigned)
  add { \pp7_1 [69:3] 45'000000000000000000000000000000000000000000000 } (112 bits, unsigned)
  add { 3'000 \pp6_1 [136:70] 36'000000000000000000000000000000000000 } (106 bits, unsigned)
  add { \pp8_1 [69:3] 51'000000000000000000000000000000000000000000000000000 } (118 bits, unsigned)
  add { \pp9_1 [69:3] 57'000000000000000000000000000000000000000000000000000000000 } (124 bits, unsigned)
  add { 3'000 \pp8_1 [136:70] 48'000000000000000000000000000000000000000000000000 } (118 bits, unsigned)
  add { 50'00000000000000000000000000000000000000000000000000 \pp0 [77:0] } (128 bits, unsigned)
  add \pp4 [127:0] (128 bits, unsigned)
  add \pp3 [127:0] (128 bits, unsigned)
  add { 26'00000000000000000000000000 \pp2 [101:0] } (128 bits, unsigned)
  add { 38'00000000000000000000000000000000000000 \pp1 [89:0] } (128 bits, unsigned)
  add { \pp4_1 [69:3] 27'000000000000000000000000000 } (94 bits, unsigned)
  add { \pp5_1 [69:3] 33'000000000000000000000000000000000 } (100 bits, unsigned)
  add { 3'000 \pp4_1 [136:70] 24'000000000000000000000000 } (94 bits, unsigned)
Using extmapper simplemap for cells of type $sdffe.
  add \s1__h3477 [63:0] (64 bits, unsigned)
  add { \s3__h3479 [65:2] 2'00 } (66 bits, unsigned)
  add { \s2__h3478 [64:1] 1'0 } (65 bits, unsigned)
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001001000 for cells of type $lcu.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000001 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001001100 for cells of type $fa.
Using template $paramod$a3cbdc08f5a74ceff917cb503f76ccb90da314da\_90_alu for cells of type $alu.
Using template $paramod$bd6792e14beb844c1b0e71a72db4c26c74ef9fc3\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001111111 for cells of type $fa.
Using template $paramod$7e7bdf4b0adff8e15b2cb24084cd1b911e7a73b3\_90_alu for cells of type $alu.
Using template $paramod$ff0313050279b63b21e4cd7569b49a6e36f59fcb\_90_alu for cells of type $alu.
Using template $paramod$46881a9ef95dd5af7875dbe747027e4f0980bf82\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000010000000 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000010000000 for cells of type $fa.
Using template $paramod$7232cf6dff8c7c22d9f85eee627510322813cbae\_90_alu for cells of type $alu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000010 for cells of type $fa.
Using template $paramod$3566b3358bac682276fdbdbfc70170b333b0bfc3\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001011001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001110001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001111101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001001101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001100101 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000011 for cells of type $lcu.
No more expansions possible.
<suppressed ~21753 debug messages>

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~9866 debug messages>

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
<suppressed ~375 debug messages>
Removed a total of 125 cells.

37.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6745 ($_SDFFE_PN0P_) from module mk_mul.

37.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 3523 unused cells and 3410 unused wires.
<suppressed ~3524 debug messages>

37.5. Rerunning OPT passes. (Removed registers in this run.)

37.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~488 debug messages>

37.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

37.8. Executing OPT_DFF pass (perform DFF optimizations).

37.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 11 unused cells and 47 unused wires.
<suppressed ~12 debug messages>

37.10. Finished fast OPT passes.

38. Executing ABC pass (technology mapping using ABC).

38.1. Extracting gate netlist of module `\mk_mul' to `<abc-temp-dir>/input.blif'..
Extracted 35122 gates and 37360 wires to a netlist network with 2237 inputs and 2234 outputs.

38.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

38.1.2. Re-integrating ABC results.
ABC RESULTS:               MUX cells:      251
ABC RESULTS:               NOT cells:     1179
ABC RESULTS:              NAND cells:     1378
ABC RESULTS:               AND cells:     4978
ABC RESULTS:             ORNOT cells:     1571
ABC RESULTS:                OR cells:     5378
ABC RESULTS:               NOR cells:     5259
ABC RESULTS:            ANDNOT cells:     7480
ABC RESULTS:               XOR cells:     6075
ABC RESULTS:              XNOR cells:     2493
ABC RESULTS:        internal signals:    32889
ABC RESULTS:           input signals:     2237
ABC RESULTS:          output signals:     2234
Removing temp directory.

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.
<suppressed ~251 debug messages>

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 3 unused cells and 17454 unused wires.
<suppressed ~4 debug messages>

39.5. Finished fast OPT passes.

40. Executing HIERARCHY pass (managing design hierarchy).

40.1. Analyzing design hierarchy..
Top module:  \mk_mul

40.2. Analyzing design hierarchy..
Top module:  \mk_mul
Removed 0 unused modules.

41. Printing statistics.

=== mk_mul ===

   Number of wires:              34038
   Number of wire bits:          50792
   Number of public wires:         233
   Number of public wire bits:   16987
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              38180
     $_ANDNOT_                    7480
     $_AND_                       4978
     $_MUX_                        251
     $_NAND_                      1378
     $_NOR_                       5259
     $_NOT_                       1176
     $_ORNOT_                     1571
     $_OR_                        5378
     $_SDFFE_PN0P_                2141
     $_XNOR_                      2493
     $_XOR_                       6075

42. Executing CHECK pass (checking for obvious problems).
Checking module mk_mul...
Found and reported 0 problems.

43. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/mk_mul/runs/RUN_2023.12.11_04.52.09/tmp/synthesis/post_techmap.dot'.
Dumping module mk_mul to page 1.

44. Executing SHARE pass (SAT-based resource sharing).

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mk_mul..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mk_mul.
Performed a total of 0 changes.

45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mk_mul'.
Removed a total of 0 cells.

45.6. Executing OPT_DFF pass (perform DFF optimizations).

45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..

45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mk_mul.

45.9. Finished OPT passes. (There is nothing left to do.)

46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 0 unused cells and 166 unused wires.
<suppressed ~166 debug messages>

47. Printing statistics.

=== mk_mul ===

   Number of wires:              33872
   Number of wire bits:          38962
   Number of public wires:          67
   Number of public wire bits:    5157
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              38180
     $_ANDNOT_                    7480
     $_AND_                       4978
     $_MUX_                        251
     $_NAND_                      1378
     $_NOR_                       5259
     $_NOT_                       1176
     $_ORNOT_                     1571
     $_OR_                        5378
     $_SDFFE_PN0P_                2141
     $_XNOR_                      2493
     $_XOR_                       6075

mapping tbuf

48. Executing TECHMAP pass (map to technology primitives).

48.1. Executing Verilog-2005 frontend: /home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

48.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

49. Executing SIMPLEMAP pass (map simple cells to gate primitives).

50. Executing TECHMAP pass (map to technology primitives).

50.1. Executing Verilog-2005 frontend: /home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/yuk/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

50.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

51. Executing SIMPLEMAP pass (map simple cells to gate primitives).

52. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

52.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\mk_mul':
  mapped 2141 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

53. Printing statistics.

=== mk_mul ===

   Number of wires:              38154
   Number of wire bits:          43244
   Number of public wires:          67
   Number of public wire bits:    5157
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              42462
     $_ANDNOT_                    7480
     $_AND_                       4978
     $_MUX_                       4533
     $_NAND_                      1378
     $_NOR_                       5259
     $_NOT_                       1176
     $_ORNOT_                     1571
     $_OR_                        5378
     $_XNOR_                      2493
     $_XOR_                       6075
     sky130_fd_sc_hd__dfxtp_2     2141

[INFO]: USING STRATEGY AREA 0

54. Executing ABC pass (technology mapping using ABC).

54.1. Extracting gate netlist of module `\mk_mul' to `/tmp/yosys-abc-eMa6oE/input.blif'..
Extracted 40321 gates and 42594 wires to a netlist network with 2271 inputs and 2270 outputs.

54.1.1. Executing ABC.
Running ABC command: "/build/bin/yosys-abc" -s -f /tmp/yosys-abc-eMa6oE/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-eMa6oE/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-eMa6oE/input.blif 
ABC: + read_lib -w /openlane/designs/mk_mul/runs/RUN_2023.12.11_04.52.09/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.08 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/mk_mul/runs/RUN_2023.12.11_04.52.09/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.11 sec
ABC: Memory =    9.54 MB. Time =     0.11 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/mk_mul/runs/RUN_2023.12.11_04.52.09/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/mk_mul/runs/RUN_2023.12.11_04.52.09/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + retime -D -D 10000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + drw -l 
ABC: + drf -l 
ABC: + balance 
ABC: + drw -l 
ABC: + drw -l -z 
ABC: + balance 
ABC: + drf -l -z 
ABC: + drw -l -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 10000.0 
ABC: + dnsize -D 10000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  33587 (  9.0 %)   Cap = 10.3 ff (  2.1 %)   Area =   294443.66 ( 90.8 %)   Delay = 11363.20 ps  (  0.3 %)               
ABC: Path  0 --     276 : 0    3 pi                       A =   0.00  Df =  44.8  -25.1 ps  S =  67.7 ps  Cin =  0.0 ff  Cout =  13.4 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    4551 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df = 577.8 -351.4 ps  S = 107.6 ps  Cin =  2.4 ff  Cout =  16.9 ff  Cmax = 534.7 ff  G =  668  
ABC: Path  2 --    4553 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =1101.2 -735.2 ps  S = 102.2 ps  Cin =  2.4 ff  Cout =  14.3 ff  Cmax = 534.7 ff  G =  563  
ABC: Path  3 --    4554 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =1557.7-1058.1 ps  S = 102.2 ps  Cin =  2.4 ff  Cout =  14.3 ff  Cmax = 534.7 ff  G =  563  
ABC: Path  4 --    4555 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =2011.6-1380.7 ps  S = 100.7 ps  Cin =  2.4 ff  Cout =  13.4 ff  Cmax = 534.7 ff  G =  529  
ABC: Path  5 --    4557 : 4    3 sky130_fd_sc_hd__or4_4   A =  11.26  Df =2515.0-1761.0 ps  S =  91.4 ps  Cin =  2.4 ff  Cout =   8.6 ff  Cmax = 534.7 ff  G =  339  
ABC: Path  6 --    4558 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =2968.1-2086.4 ps  S = 102.2 ps  Cin =  2.4 ff  Cout =  14.3 ff  Cmax = 534.7 ff  G =  563  
ABC: Path  7 --    4559 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =3433.3-2412.4 ps  S = 107.5 ps  Cin =  2.4 ff  Cout =  16.9 ff  Cmax = 534.7 ff  G =  668  
ABC: Path  8 --    4561 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =3965.5-2799.2 ps  S = 107.5 ps  Cin =  2.4 ff  Cout =  16.9 ff  Cmax = 534.7 ff  G =  668  
ABC: Path  9 --    4563 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =4476.8-3180.3 ps  S =  94.8 ps  Cin =  2.4 ff  Cout =  10.2 ff  Cmax = 534.7 ff  G =  405  
ABC: Path 10 --    4569 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =5052.1-3617.2 ps  S = 103.6 ps  Cin =  2.4 ff  Cout =  14.9 ff  Cmax = 534.7 ff  G =  588  
ABC: Path 11 --    4573 : 4    5 sky130_fd_sc_hd__or4_4   A =  11.26  Df =5622.6-4050.6 ps  S =  98.6 ps  Cin =  2.4 ff  Cout =  12.3 ff  Cmax = 534.7 ff  G =  489  
ABC: Path 12 --    4588 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =6143.0-4435.8 ps  S = 102.2 ps  Cin =  2.4 ff  Cout =  14.3 ff  Cmax = 534.7 ff  G =  563  
ABC: Path 13 --    4596 : 4    3 sky130_fd_sc_hd__or4_4   A =  11.26  Df =6582.3-4754.6 ps  S =  91.8 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 534.7 ff  G =  346  
ABC: Path 14 --    4612 : 4    2 sky130_fd_sc_hd__or4_4   A =  11.26  Df =7078.3-5135.4 ps  S =  88.7 ps  Cin =  2.4 ff  Cout =   7.2 ff  Cmax = 534.7 ff  G =  283  
ABC: Path 15 --    4615 : 2    5 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7343.0-5271.6 ps  S =  65.5 ps  Cin =  2.4 ff  Cout =  16.9 ff  Cmax = 514.5 ff  G =  664  
ABC: Path 16 --    4626 : 2    4 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7610.9-5406.2 ps  S =  58.3 ps  Cin =  2.4 ff  Cout =  13.4 ff  Cmax = 514.5 ff  G =  528  
ABC: Path 17 --    4638 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7867.0-5543.4 ps  S =  52.0 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 514.5 ff  G =  346  
ABC: Path 18 --    4660 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =8372.4-5917.2 ps  S = 102.6 ps  Cin =  2.4 ff  Cout =  14.4 ff  Cmax = 534.7 ff  G =  567  
ABC: Path 19 --    4670 : 2    4 sky130_fd_sc_hd__or2_4   A =   8.76  Df =8655.6-6069.6 ps  S =  58.7 ps  Cin =  2.4 ff  Cout =  13.4 ff  Cmax = 514.5 ff  G =  528  
ABC: Path 20 --    4682 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =8911.9-6207.0 ps  S =  52.0 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 514.5 ff  G =  346  
ABC: Path 21 --    4703 : 4    3 sky130_fd_sc_hd__or4_4   A =  11.26  Df =9399.4-6575.9 ps  S =  91.8 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 534.7 ff  G =  346  
ABC: Path 22 --    4726 : 4    4 sky130_fd_sc_hd__or4_4   A =  11.26  Df =9918.1-6962.8 ps  S = 102.6 ps  Cin =  2.4 ff  Cout =  14.4 ff  Cmax = 534.7 ff  G =  567  
ABC: Path 23 --    4747 : 3    4 sky130_fd_sc_hd__or3_4   A =  11.26  Df =10343.0-7251.3 ps  S =  82.0 ps  Cin =  2.4 ff  Cout =  14.4 ff  Cmax = 531.9 ff  G =  577  
ABC: Path 24 --    4757 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =10614.8-7396.4 ps  S =  56.3 ps  Cin =  2.4 ff  Cout =  11.8 ff  Cmax = 514.5 ff  G =  466  
ABC: Path 25 --    4762 : 3    2 sky130_fd_sc_hd__or3_4   A =  11.26  Df =10952.4-7614.5 ps  S =  73.5 ps  Cin =  2.4 ff  Cout =   9.3 ff  Cmax = 531.9 ff  G =  375  
ABC: Path 26 --    4765 : 3    1 sky130_fd_sc_hd__o21ai_2 A =   8.76  Df =11105.4-7708.7 ps  S = 142.7 ps  Cin =  4.5 ff  Cout =   8.4 ff  Cmax = 139.2 ff  G =  181  
ABC: Path 27 --    4766 : 2    1 sky130_fd_sc_hd__xnor2_2 A =  16.27  Df =11363.2-7572.7 ps  S = 453.5 ps  Cin =  8.5 ff  Cout =  33.4 ff  Cmax = 121.8 ff  G =  394  
ABC: Start-point = pi275 (\result [3]).  End-point = po70 (\get_out_snd [127]).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 2271/ 2270  lat =    0  nd = 33587  edge =  88034  area =294500.41  delay =34.00  lev = 34
ABC: + write_blif /tmp/yosys-abc-eMa6oE/output.blif 

54.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__buf_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor2b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o41ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o41a_2 cells:       10
ABC RESULTS:   sky130_fd_sc_hd__nand4b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__nand2b_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__nor4b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__a221o_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:       94
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:      143
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__a311oi_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       98
ABC RESULTS:   sky130_fd_sc_hd__a311o_2 cells:       59
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:      194
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:       60
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      172
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:     2248
ABC RESULTS:   sky130_fd_sc_hd__a41oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:      184
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:      157
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:      126
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:       20
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      310
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:      713
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:      270
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:       62
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      251
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:      223
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      869
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      858
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:      233
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:      451
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      749
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      783
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:      531
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:     4013
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:     1878
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:      515
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:     1783
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:      503
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:     2028
ABC RESULTS:   sky130_fd_sc_hd__o2111a_2 cells:       93
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:       82
ABC RESULTS:   sky130_fd_sc_hd__o31ai_2 cells:      104
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:     1454
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:     1358
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:     1252
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:       66
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:      220
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      976
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:     2966
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:     1004
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:     1736
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:      661
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:      557
ABC RESULTS:        internal signals:    38053
ABC RESULTS:           input signals:     2271
ABC RESULTS:          output signals:     2270
Removing temp directory.

55. Executing SETUNDEF pass (replace undef values with defined constants).

56. Executing HILOMAP pass (mapping to constant drivers).

57. Executing SPLITNETS pass (splitting up multi-bit signals).

58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mk_mul..
Removed 620 unused cells and 43862 unused wires.
<suppressed ~3376 debug messages>

59. Executing INSBUF pass (insert buffer cells for connected wires).
Add mk_mul/$auto$insbuf.cc:97:execute$136929: \RDY_get_out_fst -> \RDY_get_out_snd

60. Executing CHECK pass (checking for obvious problems).
Checking module mk_mul...
Warning: Wire mk_mul.\get_out_snd [127] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [126] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [125] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [124] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [123] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [122] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [121] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [120] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [119] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [118] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [117] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [116] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [115] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [114] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [113] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [112] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [111] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [110] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [109] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [108] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [107] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [106] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [105] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [104] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [103] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [102] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [101] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [100] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [99] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [98] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [97] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [96] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [95] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [94] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [93] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [92] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [91] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [90] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [89] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [88] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [87] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [86] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [85] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [84] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [83] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [82] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [81] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [80] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [79] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [78] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [77] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [76] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [75] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [74] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [73] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [72] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [71] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [70] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [69] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [68] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [67] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [66] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [65] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [64] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [63] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [62] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [61] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [60] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [59] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [58] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [57] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [56] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [55] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [54] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [53] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [52] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [51] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [50] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [49] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [48] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [47] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [46] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [45] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [44] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [43] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [42] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [41] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [40] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [39] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [38] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [37] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [36] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [35] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [34] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [33] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [32] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [31] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [30] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [29] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [28] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [27] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [26] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [25] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [24] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [23] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [22] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [21] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [20] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [19] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [18] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [17] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [16] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [15] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [14] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [13] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [12] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [11] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [10] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [9] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [8] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [7] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [6] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [5] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [4] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [3] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [2] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [1] is used but has no driver.
Warning: Wire mk_mul.\get_out_snd [0] is used but has no driver.
Warning: Wire mk_mul.\get_out_fst is used but has no driver.
Warning: Wire mk_mul.\RDY_get_out_snd is used but has no driver.
Warning: Wire mk_mul.\RDY_get_out_fst is used but has no driver.
Warning: Wire mk_mul.\RDY_get_inp is used but has no driver.
Found and reported 132 problems.

61. Printing statistics.

=== mk_mul ===

   Number of wires:              35607
   Number of wire bits:          35860
   Number of public wires:        2149
   Number of public wire bits:    2402
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              35729
     sky130_fd_sc_hd__a2111o_2      30
     sky130_fd_sc_hd__a2111oi_2      9
     sky130_fd_sc_hd__a211o_2      251
     sky130_fd_sc_hd__a211oi_2     157
     sky130_fd_sc_hd__a21bo_2      172
     sky130_fd_sc_hd__a21boi_2     194
     sky130_fd_sc_hd__a21o_2      1783
     sky130_fd_sc_hd__a21oi_2     1736
     sky130_fd_sc_hd__a221o_2       35
     sky130_fd_sc_hd__a221oi_2      16
     sky130_fd_sc_hd__a22o_2       749
     sky130_fd_sc_hd__a22oi_2      531
     sky130_fd_sc_hd__a2bb2o_2      98
     sky130_fd_sc_hd__a311o_2       59
     sky130_fd_sc_hd__a311oi_2      19
     sky130_fd_sc_hd__a31o_2       515
     sky130_fd_sc_hd__a31oi_2       82
     sky130_fd_sc_hd__a32o_2       143
     sky130_fd_sc_hd__a32oi_2        2
     sky130_fd_sc_hd__a41o_2        20
     sky130_fd_sc_hd__a41oi_2        6
     sky130_fd_sc_hd__and2_2      1252
     sky130_fd_sc_hd__and2b_2      310
     sky130_fd_sc_hd__and3_2       976
     sky130_fd_sc_hd__and3b_2       60
     sky130_fd_sc_hd__and4_2       858
     sky130_fd_sc_hd__and4b_2       25
     sky130_fd_sc_hd__and4bb_2      18
     sky130_fd_sc_hd__buf_1       2248
     sky130_fd_sc_hd__buf_2          2
     sky130_fd_sc_hd__dfxtp_2     2141
     sky130_fd_sc_hd__inv_2        783
     sky130_fd_sc_hd__mux2_2        14
     sky130_fd_sc_hd__nand2_2     4013
     sky130_fd_sc_hd__nand2b_2       9
     sky130_fd_sc_hd__nand3_2      869
     sky130_fd_sc_hd__nand3b_2      35
     sky130_fd_sc_hd__nand4_2      223
     sky130_fd_sc_hd__nand4b_2       4
     sky130_fd_sc_hd__nor2_2      2028
     sky130_fd_sc_hd__nor2b_2        2
     sky130_fd_sc_hd__nor3_2       126
     sky130_fd_sc_hd__nor3b_2       20
     sky130_fd_sc_hd__nor4_2        18
     sky130_fd_sc_hd__nor4b_2        2
     sky130_fd_sc_hd__o2111a_2      93
     sky130_fd_sc_hd__o2111ai_2     19
     sky130_fd_sc_hd__o211a_2     1358
     sky130_fd_sc_hd__o211ai_2      62
     sky130_fd_sc_hd__o21a_2       661
     sky130_fd_sc_hd__o21ai_2     1004
     sky130_fd_sc_hd__o21ba_2      451
     sky130_fd_sc_hd__o21bai_2     270
     sky130_fd_sc_hd__o221a_2      557
     sky130_fd_sc_hd__o221ai_2       1
     sky130_fd_sc_hd__o22a_2        37
     sky130_fd_sc_hd__o22ai_2        4
     sky130_fd_sc_hd__o2bb2a_2      30
     sky130_fd_sc_hd__o2bb2ai_2      1
     sky130_fd_sc_hd__o311a_2       94
     sky130_fd_sc_hd__o311ai_2      17
     sky130_fd_sc_hd__o31a_2       184
     sky130_fd_sc_hd__o31ai_2      104
     sky130_fd_sc_hd__o32a_2        18
     sky130_fd_sc_hd__o32ai_2        2
     sky130_fd_sc_hd__o41a_2        10
     sky130_fd_sc_hd__o41ai_2        2
     sky130_fd_sc_hd__or2_2       2966
     sky130_fd_sc_hd__or2_4          9
     sky130_fd_sc_hd__or2b_2       713
     sky130_fd_sc_hd__or3_2        503
     sky130_fd_sc_hd__or3_4          8
     sky130_fd_sc_hd__or3b_2       220
     sky130_fd_sc_hd__or4_2        233
     sky130_fd_sc_hd__or4_4         37
     sky130_fd_sc_hd__or4b_2        66
     sky130_fd_sc_hd__or4bb_2       20
     sky130_fd_sc_hd__xnor2_2     1878
     sky130_fd_sc_hd__xor2_2      1454

   Chip area for module '\mk_mul': 339988.576000

62. Executing Verilog backend.
Dumping module `\mk_mul'.

Warnings: 133 unique messages, 133 total
End of script. Logfile hash: 14a36aa470, CPU: user 23.10s system 0.23s, MEM: 214.32 MB peak
Yosys 0.34 (git sha1 4a1b5599258, gcc 8.3.1 -fPIC -Os)
Time spent: 68% 2x abc (47 sec), 11% 41x opt_expr (7 sec), ...
